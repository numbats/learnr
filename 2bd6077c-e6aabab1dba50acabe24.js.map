{"version":3,"sources":["webpack:///./node_modules/reveal.js/js/reveal.js"],"names":["root","this","Reveal","indexh","indexv","previousSlide","currentSlide","previousBackground","isMobileDevice","isChrome","autoSlidePlayer","UA","navigator","userAgent","POST_MESSAGE_METHOD_BLACKLIST","config","width","height","margin","minScale","maxScale","controls","controlsTutorial","controlsLayout","controlsBackArrows","progress","slideNumber","showSlideNumber","hashOneBasedIndex","hash","history","keyboard","keyboardCondition","overview","disableLayout","center","touch","loop","rtl","navigationMode","shuffle","fragments","fragmentInURL","embedded","help","pause","showNotes","autoPlayMedia","preloadIframes","autoSlide","autoSlideStoppable","autoSlideMethod","defaultTiming","mouseWheel","rollingLinks","hideAddressBar","previewLinks","postMessage","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","backgroundTransition","parallaxBackgroundImage","parallaxBackgroundSize","parallaxBackgroundRepeat","parallaxBackgroundPosition","parallaxBackgroundHorizontal","parallaxBackgroundVertical","pdfMaxPagesPerSlide","Number","POSITIVE_INFINITY","pdfSeparateFragments","pdfPageHeightOffset","viewDistance","mobileViewDistance","display","hideInactiveCursor","hideCursorTime","dependencies","initialized","loaded","overviewSlideWidth","overviewSlideHeight","hasNavigatedRight","hasNavigatedDown","state","scale","slidesTransform","layout","dom","plugins","asyncDependencies","features","lastMouseWheelStep","writeURLTimeout","cursorHidden","cursorInactiveTimeout","eventsAreBound","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","startX","startY","startCount","captured","threshold","keyboardShortcuts","registeredKeyBindings","initPlugins","pluginsToInitialize","Object","keys","length","loadAsyncDependencies","afterPlugInitialized","i","plugin","init","callback","then","statusDiv","forEach","s","loadScript","src","slides","classList","add","wrapper","remove","test","background","createSingletonNode","progressbar","querySelector","speakerNotes","setAttribute","pauseOverlay","controlsLeft","toArray","document","querySelectorAll","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsDownArrow","getElementById","createElement","style","position","overflow","clip","appendChild","window","addEventListener","event","data","charAt","JSON","parse","method","result","apply","args","dispatchPostMessage","console","warn","setInterval","scrollTop","scrollLeft","horizontalSlide","verticalSlide","y","configure","readURL","updateBackground","setTimeout","dispatchEvent","isPrintingPDF","removeEventListeners","readyState","setupPDF","url","script","type","async","defer","onload","onreadystatechange","onerror","err","Error","head","insertBefore","lastChild","getStatusText","node","text","nodeType","textContent","isAriaHidden","getAttribute","isDisplayHidden","getComputedStyle","childNodes","child","slideSize","getComputedSlideSize","innerWidth","innerHeight","pageWidth","Math","floor","pageHeight","slideWidth","slideHeight","injectStyleSheet","body","layoutSlideContents","doingSlideNumbers","slide","getSlideNumber","contains","left","top","contentHeight","scrollHeight","numberOfPages","max","ceil","min","page","className","parentNode","slideBackgroundElement","notes","getSlideNotes","notesLayout","notesElement","innerHTML","nextSibling","notesSpacing","bottom","numberElement","previousFragmentStep","previousPage","fragmentGroups","sortFragments","fragment","clonedPage","cloneNode","container","tagname","classname","nodes","testNode","createBackground","element","replace","contentElement","slideBackgroundContentElement","syncBackground","removeAttribute","backgroundColor","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","opacity","backgroundVideo","backgroundIframe","backgroundOpacity","hasAttribute","color","contrastColor","computedBackgroundStyle","rgb","colorToRgb","a","r","g","b","options","oldTransition","extend","numberOfSlides","transforms3d","resume","onDocumentMouseScroll","removeEventListener","anchors","SLIDES_SELECTOR","len","anchor","span","enableRollingLinks","disableRollingLinks","onDocumentCursorActive","showCursor","enablePreviewLinks","disablePreviewLinks","destroy","canvas","requestAnimationFrame","Playback","Date","now","on","onAutoSlidePlayerClick","slideNumberDisplay","isSpeakerNotes","sync","addEventListeners","visibilityChange","onWindowHashChange","onWindowResize","onPointerDown","onPointerMove","onPointerUp","msPointerEnabled","onTouchStart","onTouchMove","onTouchEnd","onDocumentKeyDown","onDocumentKeyPress","onProgressClicked","onPageVisibilityChange","pointerEvents","match","eventName","el","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","o","Array","prototype","slice","call","deserialize","value","parseFloat","transformElement","transform","WebkitTransform","MozTransform","msTransform","transformSlides","transforms","tag","styleSheet","cssText","createTextNode","getElementsByTagName","closestParent","target","selector","parent","matchesMethod","matches","matchesSelector","msMatchesSelector","hex3","parseInt","hex6","substr","rgba","location","search","removeAddressBar","scrollTo","createEvent","initEvent","self","message","namespace","getState","stringify","onPreviewLinkClicked","toggleHelp","override","showHelp","closeOverlay","overlay","html","key","binding","description","join","preventDefault","removeChild","documentElement","setProperty","size","oldScale","presentationWidth","presentationHeight","zoom","right","devicePixelRatio","updateProgress","updateParallax","isOverview","updateOverview","remainingHeight","newHeight","oldHeight","offsetHeight","removeProperty","getRemainingHeight","nodeName","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","offsetWidth","setPreviousVerticalIndex","stack","v","getPreviousVerticalIndex","attributeName","activateOverview","overviewTransitions","cancelAutoSlide","onOverviewSlideClicked","updateSlidesVisibility","layoutOverview","hslide","h","vslide","hbackground","vbackground","vmin","deactivateOverview","cueAutoSlide","toggleOverview","locationHash","id","encodeURIComponent","index","getIndices","f","undefined","hashIndexBase","isVerticalSlide","cursor","hideCursor","wasPaused","togglePause","isPaused","toggleAutoSlide","resumeAutoSlide","pauseAutoSlide","horizontalSlides","stateBefore","concat","indexhBefore","indexvBefore","updateSlides","currentHorizontalSlide","currentVerticalSlides","navigateFragment","slideChanged","HORIZONTAL_SLIDES_SELECTOR","stateLoop","j","splice","pop","stopEmbeddedContent","startEmbeddedContent","updateControls","updateSlideNumber","updateNotes","updateFragments","writeURL","_appendParamToIframeSource","slideh","backgroundStack","slidev","verticalSlides","sourceAttribute","sourceURL","param","indexOf","unloadIframes","syncFragments","random","slidesLength","printMode","reverse","slideState","split","distanceX","horizontalSlidesLength","MAX_VALUE","x","verticalSlidesLength","abs","loadSlide","unloadSlide","oy","hasVerticalSlides","hasHorizontalSlides","getProgress","format","push","getSlidePastCount","getTotalSlides","indices","sep","delimiter","isNaN","formatSlideNumber","routes","availableRoutes","availableFragments","up","down","prev","next","includeAll","currentBackground","horizontalPast","horizontalFuture","backgroundh","backgroundv","shouldPreload","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","backgroundWidth","backgroundHeight","horizontalOffset","horizontalSlideCount","verticalOffsetMultiplier","verticalOffset","verticalSlideCount","preload","tagName","media","sources","source","load","backgroundContent","backgroundVideoLoop","backgroundVideoMuted","encodeURI","video","muted","autoplay","excludeIframes","iframe","maxHeight","maxWidth","backgroundIframeElement","getSlideBackground","hiddenFragments","play","startEmbeddedMedia","promise","catch","startEmbeddedIframe","isAttachedToDOM","isVisible","currentTime","contentWindow","pastCount","mainLoop","totalCount","allFragments","bits","name","decodeURIComponent","error","isSameNameAsCurrentSlide","delay","clearTimeout","replaceState","pathname","isVertical","currentFragment","getSlides","getHorizontalSlides","getVerticalSlides","getSlide","indexf","paused","grouped","ordered","unordered","sorted","group","changedFragments","shown","hidden","maxIndex","offset","lastVisibleFragment","nextFragment","previousFragment","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","duration","playbackRate","isLastSlide","navigateNext","setPlaying","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","isLastVerticalSlide","isSwipePrevented","onUserInput","shiftKey","charCode","keyCode","autoSlideWasPaused","activeElementIsCE","activeElement","contentEditable","activeElementIsInput","activeElementIsNotes","prevSlideShortcut","firstSlideShortcut","lastSlideShortcut","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","requestMethod","useLinearMode","triggered","action","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","touches","clientX","clientY","currentX","currentY","deltaX","deltaY","pointerType","MSPOINTER_TYPE_TOUCH","delta","detail","wheelDelta","slidesTotal","slideIndex","webkitHidden","msHidden","blur","focus","currentTarget","showPreview","progressCheck","diameter","diameter2","thickness","playing","progressOffset","context","getContext","render","wasPlaying","animate","progressBefore","requestAnimationFrameMethod","bind","radius","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","translate","iconSize","fillRect","moveTo","lineTo","restore","listener","off","VERSION","initialize","platform","maxTouchPoints","testElement","transforms2d","webkitRequestAnimationFrame","mozRequestAnimationFrame","checkCapabilities","scripts","scriptsToLoad","query","getQueryHash","condition","images","iframes","lazyLoadable","syncSlide","prevFragment","navigateTo","isAutoSliding","setState","pausedFlag","overviewFlag","getSlidesAttributes","map","attributes","attribute","getPreviousSlide","getCurrentSlide","getScale","getConfig","shift","unescape","getRevealElement","getPlugins","isFirstSlide","nextElementSibling","isReady","useCapture","addKeyBinding","removeKeyBinding","registerPlugin","hasPlugin","getPlugin","triggerKey","registerKeyboardShortcut","factory"],"mappings":"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","file":"2bd6077c-e6aabab1dba50acabe24.js","sourcesContent":["/*!\n * reveal.js\n * http://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2020 Hakim El Hattab, http://hakim.se\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(function () {\n      root.Reveal = factory();\n      return root.Reveal;\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS.\n    module.exports = factory();\n  } else {\n    // Browser globals.\n    root.Reveal = factory();\n  }\n})(this, function () {\n  'use strict';\n\n  var Reveal; // The reveal.js version\n\n  var VERSION = '3.9.2';\n  var SLIDES_SELECTOR = '.slides section',\n      HORIZONTAL_SLIDES_SELECTOR = '.slides>section',\n      VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section',\n      HOME_SLIDE_SELECTOR = '.slides>section:first-of-type',\n      UA = navigator.userAgent,\n      // Methods that may not be invoked via the postMessage API\n  POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener/,\n      // Configuration defaults, can be overridden at initialization time\n  config = {\n    // The \"normal\" size of the presentation, aspect ratio will be preserved\n    // when the presentation is scaled to fit different resolutions\n    width: 960,\n    height: 700,\n    // Factor of the display size that should remain empty around the content\n    margin: 0.04,\n    // Bounds for smallest/largest possible scale to apply to content\n    minScale: 0.2,\n    maxScale: 2.0,\n    // Display presentation control arrows\n    controls: true,\n    // Help the user learn the controls by providing hints, for example by\n    // bouncing the down arrow when they first encounter a vertical slide\n    controlsTutorial: true,\n    // Determines where controls appear, \"edges\" or \"bottom-right\"\n    controlsLayout: 'bottom-right',\n    // Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n    // or \"visible\"\n    controlsBackArrows: 'faded',\n    // Display a presentation progress bar\n    progress: true,\n    // Display the page number of the current slide\n    // - true:    Show slide number\n    // - false:   Hide slide number\n    //\n    // Can optionally be set as a string that specifies the number formatting:\n    // - \"h.v\":\t  Horizontal . vertical slide number (default)\n    // - \"h/v\":\t  Horizontal / vertical slide number\n    // - \"c\":\t  Flattened slide number\n    // - \"c/t\":\t  Flattened slide number / total slides\n    //\n    // Alternatively, you can provide a function that returns the slide\n    // number for the current slide. The function should take in a slide\n    // object and return an array with one string [slideNumber] or\n    // three strings [n1,delimiter,n2]. See #formatSlideNumber().\n    slideNumber: false,\n    // Can be used to limit the contexts in which the slide number appears\n    // - \"all\":      Always show the slide number\n    // - \"print\":    Only when printing to PDF\n    // - \"speaker\":  Only in the speaker view\n    showSlideNumber: 'all',\n    // Use 1 based indexing for # links to match slide number (default is zero\n    // based)\n    hashOneBasedIndex: false,\n    // Add the current slide number to the URL hash so that reloading the\n    // page/copying the URL will return you to the same slide\n    hash: false,\n    // Push each slide change to the browser history.  Implies `hash: true`\n    history: false,\n    // Enable keyboard shortcuts for navigation\n    keyboard: true,\n    // Optional function that blocks keyboard events when retuning false\n    keyboardCondition: null,\n    // Enable the slide overview mode\n    overview: true,\n    // Disables the default reveal.js slide layout so that you can use\n    // custom CSS layout\n    disableLayout: false,\n    // Vertical centering of slides\n    center: true,\n    // Enables touch navigation on devices with touch input\n    touch: true,\n    // Loop the presentation\n    loop: false,\n    // Change the presentation direction to be RTL\n    rtl: false,\n    // Changes the behavior of our navigation directions.\n    //\n    // \"default\"\n    // Left/right arrow keys step between horizontal slides, up/down\n    // arrow keys step between vertical slides. Space key steps through\n    // all slides (both horizontal and vertical).\n    //\n    // \"linear\"\n    // Removes the up/down arrows. Left/right arrows step through all\n    // slides (both horizontal and vertical).\n    //\n    // \"grid\"\n    // When this is enabled, stepping left/right from a vertical stack\n    // to an adjacent vertical stack will land you at the same vertical\n    // index.\n    //\n    // Consider a deck with six slides ordered in two vertical stacks:\n    // 1.1    2.1\n    // 1.2    2.2\n    // 1.3    2.3\n    //\n    // If you're on slide 1.3 and navigate right, you will normally move\n    // from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n    // from 1.3 -> 2.3.\n    navigationMode: 'default',\n    // Randomizes the order of slides each time the presentation loads\n    shuffle: false,\n    // Turns fragments on and off globally\n    fragments: true,\n    // Flags whether to include the current fragment in the URL,\n    // so that reloading brings you to the same fragment position\n    fragmentInURL: false,\n    // Flags if the presentation is running in an embedded mode,\n    // i.e. contained within a limited portion of the screen\n    embedded: false,\n    // Flags if we should show a help overlay when the question-mark\n    // key is pressed\n    help: true,\n    // Flags if it should be possible to pause the presentation (blackout)\n    pause: true,\n    // Flags if speaker notes should be visible to all viewers\n    showNotes: false,\n    // Global override for autolaying embedded media (video/audio/iframe)\n    // - null:   Media will only autoplay if data-autoplay is present\n    // - true:   All media will autoplay, regardless of individual setting\n    // - false:  No media will autoplay, regardless of individual setting\n    autoPlayMedia: null,\n    // Global override for preloading lazy-loaded iframes\n    // - null:   Iframes with data-src AND data-preload will be loaded when within\n    //           the viewDistance, iframes with only data-src will be loaded when visible\n    // - true:   All iframes with data-src will be loaded when within the viewDistance\n    // - false:  All iframes with data-src will be loaded only when visible\n    preloadIframes: null,\n    // Controls automatic progression to the next slide\n    // - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n    //           is present on the current slide or fragment\n    // - 1+:     All slides will progress automatically at the given interval\n    // - false:  No auto-sliding, even if data-autoslide is present\n    autoSlide: 0,\n    // Stop auto-sliding after user input\n    autoSlideStoppable: true,\n    // Use this method for navigation when auto-sliding (defaults to navigateNext)\n    autoSlideMethod: null,\n    // Specify the average time in seconds that you think you will spend\n    // presenting each slide. This is used to show a pacing timer in the\n    // speaker view\n    defaultTiming: null,\n    // Enable slide navigation via mouse wheel\n    mouseWheel: false,\n    // Apply a 3D roll to links on hover\n    rollingLinks: false,\n    // Hides the address bar on mobile devices\n    hideAddressBar: true,\n    // Opens links in an iframe preview overlay\n    // Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n    // individually\n    previewLinks: false,\n    // Exposes the reveal.js API through window.postMessage\n    postMessage: true,\n    // Dispatches all reveal.js events to the parent window through postMessage\n    postMessageEvents: false,\n    // Focuses body when page changes visibility to ensure keyboard shortcuts work\n    focusBodyOnPageVisibilityChange: true,\n    // Transition style\n    transition: 'slide',\n    // none/fade/slide/convex/concave/zoom\n    // Transition speed\n    transitionSpeed: 'default',\n    // default/fast/slow\n    // Transition style for full page slide backgrounds\n    backgroundTransition: 'fade',\n    // none/fade/slide/convex/concave/zoom\n    // Parallax background image\n    parallaxBackgroundImage: '',\n    // CSS syntax, e.g. \"a.jpg\"\n    // Parallax background size\n    parallaxBackgroundSize: '',\n    // CSS syntax, e.g. \"3000px 2000px\"\n    // Parallax background repeat\n    parallaxBackgroundRepeat: '',\n    // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n    // Parallax background position\n    parallaxBackgroundPosition: '',\n    // CSS syntax, e.g. \"top left\"\n    // Amount of pixels to move the parallax background per slide step\n    parallaxBackgroundHorizontal: null,\n    parallaxBackgroundVertical: null,\n    // The maximum number of pages a single slide can expand onto when printing\n    // to PDF, unlimited by default\n    pdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n    // Prints each fragment on a separate slide\n    pdfSeparateFragments: true,\n    // Offset used to reduce the height of content within exported PDF pages.\n    // This exists to account for environment differences based on how you\n    // print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n    // on precisely the total height of the document whereas in-browser\n    // printing has to end one pixel before.\n    pdfPageHeightOffset: -1,\n    // Number of slides away from the current that are visible\n    viewDistance: 3,\n    // Number of slides away from the current that are visible on mobile\n    // devices. It is advisable to set this to a lower number than\n    // viewDistance in order to save resources.\n    mobileViewDistance: 2,\n    // The display mode that will be used to show slides\n    display: 'block',\n    // Hide cursor if inactive\n    hideInactiveCursor: true,\n    // Time before the cursor is hidden (in ms)\n    hideCursorTime: 5000,\n    // Script dependencies to load\n    dependencies: []\n  },\n      // Flags if Reveal.initialize() has been called\n  initialized = false,\n      // Flags if reveal.js is loaded (has dispatched the 'ready' event)\n  loaded = false,\n      // Flags if the overview mode is currently active\n  overview = false,\n      // Holds the dimensions of our overview slides, including margins\n  overviewSlideWidth = null,\n      overviewSlideHeight = null,\n      // The horizontal and vertical index of the currently active slide\n  indexh,\n      indexv,\n      // The previous and current slide HTML elements\n  previousSlide,\n      currentSlide,\n      previousBackground,\n      // Remember which directions that the user has navigated towards\n  hasNavigatedRight = false,\n      hasNavigatedDown = false,\n      // Slides may hold a data-state attribute which we pick up and apply\n  // as a class to the body. This list contains the combined state of\n  // all current slides.\n  state = [],\n      // The current scale of the presentation (see width/height config)\n  scale = 1,\n      // CSS transform that is currently applied to the slides container,\n  // split into two groups\n  slidesTransform = {\n    layout: '',\n    overview: ''\n  },\n      // Cached references to DOM elements\n  dom = {},\n      // A list of registered reveal.js plugins\n  plugins = {},\n      // List of asynchronously loaded reveal.js dependencies\n  asyncDependencies = [],\n      // Features supported by the browser, see #checkCapabilities()\n  features = {},\n      // Client is a mobile device, see #checkCapabilities()\n  isMobileDevice,\n      // Client is a desktop Chrome, see #checkCapabilities()\n  isChrome,\n      // Throttles mouse wheel navigation\n  lastMouseWheelStep = 0,\n      // Delays updates to the URL due to a Chrome thumbnailer bug\n  writeURLTimeout = 0,\n      // Is the mouse pointer currently hidden from view\n  cursorHidden = false,\n      // Timeout used to determine when the cursor is inactive\n  cursorInactiveTimeout = 0,\n      // Flags if the interaction event listeners are bound\n  eventsAreBound = false,\n      // The current auto-slide duration\n  autoSlide = 0,\n      // Auto slide properties\n  autoSlidePlayer,\n      autoSlideTimeout = 0,\n      autoSlideStartTime = -1,\n      autoSlidePaused = false,\n      // Holds information about the currently ongoing touch input\n  touch = {\n    startX: 0,\n    startY: 0,\n    startCount: 0,\n    captured: false,\n    threshold: 40\n  },\n      // A key:value map of shortcut keyboard keys and descriptions of\n  // the actions they trigger, generated in #configure()\n  keyboardShortcuts = {},\n      // Holds custom key code mappings\n  registeredKeyBindings = {};\n  /**\n   * Starts up the presentation if the client is capable.\n   */\n\n  function initialize(options) {\n    // Make sure we only initialize once\n    if (initialized === true) return;\n    initialized = true;\n    checkCapabilities();\n\n    if (!features.transforms2d && !features.transforms3d) {\n      document.body.setAttribute('class', 'no-transforms'); // Since JS won't be running any further, we load all lazy\n      // loading elements upfront\n\n      var images = toArray(document.getElementsByTagName('img')),\n          iframes = toArray(document.getElementsByTagName('iframe'));\n      var lazyLoadable = images.concat(iframes);\n\n      for (var i = 0, len = lazyLoadable.length; i < len; i++) {\n        var element = lazyLoadable[i];\n\n        if (element.getAttribute('data-src')) {\n          element.setAttribute('src', element.getAttribute('data-src'));\n          element.removeAttribute('data-src');\n        }\n      } // If the browser doesn't support core features we won't be\n      // using JavaScript to control the presentation\n\n\n      return;\n    } // Cache references to key DOM elements\n\n\n    dom.wrapper = document.querySelector('.reveal');\n    dom.slides = document.querySelector('.reveal .slides'); // Force a layout when the whole page, incl fonts, has loaded\n\n    window.addEventListener('load', layout, false);\n    var query = Reveal.getQueryHash(); // Do not accept new dependencies via query config to avoid\n    // the potential of malicious script injection\n\n    if (typeof query['dependencies'] !== 'undefined') delete query['dependencies']; // Copy options over to our config object\n\n    extend(config, options);\n    extend(config, query); // Hide the address bar in mobile browsers\n\n    hideAddressBar(); // Loads dependencies and continues to #start() once done\n\n    load();\n  }\n  /**\n   * Inspect the client to see what it's capable of, this\n   * should only happens once per runtime.\n   */\n\n\n  function checkCapabilities() {\n    isMobileDevice = /(iphone|ipod|ipad|android)/gi.test(UA) || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1; // iPadOS\n\n    isChrome = /chrome/i.test(UA) && !/edge/i.test(UA);\n    var testElement = document.createElement('div');\n    features.transforms3d = 'WebkitPerspective' in testElement.style || 'MozPerspective' in testElement.style || 'msPerspective' in testElement.style || 'OPerspective' in testElement.style || 'perspective' in testElement.style;\n    features.transforms2d = 'WebkitTransform' in testElement.style || 'MozTransform' in testElement.style || 'msTransform' in testElement.style || 'OTransform' in testElement.style || 'transform' in testElement.style;\n    features.requestAnimationFrameMethod = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n    features.requestAnimationFrame = typeof features.requestAnimationFrameMethod === 'function';\n    features.canvas = !!document.createElement('canvas').getContext; // Transitions in the overview are disabled in desktop and\n    // Safari due to lag\n\n    features.overviewTransitions = !/Version\\/[\\d\\.]+.*Safari/.test(UA); // Flags if we should use zoom instead of transform to scale\n    // up slides. Zoom produces crisper results but has a lot of\n    // xbrowser quirks so we only use it in whitelsited browsers.\n\n    features.zoom = 'zoom' in testElement.style && !isMobileDevice && (isChrome || /Version\\/[\\d\\.]+.*Safari/.test(UA));\n  }\n  /**\n   * Loads the dependencies of reveal.js. Dependencies are\n   * defined via the configuration option 'dependencies'\n   * and will be loaded prior to starting/binding reveal.js.\n   * Some dependencies may have an 'async' flag, if so they\n   * will load after reveal.js has been started up.\n   */\n\n\n  function load() {\n    var scripts = [],\n        scriptsToLoad = 0;\n    config.dependencies.forEach(function (s) {\n      // Load if there's no condition or the condition is truthy\n      if (!s.condition || s.condition()) {\n        if (s.async) {\n          asyncDependencies.push(s);\n        } else {\n          scripts.push(s);\n        }\n      }\n    });\n\n    if (scripts.length) {\n      scriptsToLoad = scripts.length; // Load synchronous scripts\n\n      scripts.forEach(function (s) {\n        loadScript(s.src, function () {\n          if (typeof s.callback === 'function') s.callback();\n\n          if (--scriptsToLoad === 0) {\n            initPlugins();\n          }\n        });\n      });\n    } else {\n      initPlugins();\n    }\n  }\n  /**\n   * Initializes our plugins and waits for them to be ready\n   * before proceeding.\n   */\n\n\n  function initPlugins() {\n    var pluginsToInitialize = Object.keys(plugins).length; // If there are no plugins, skip this step\n\n    if (pluginsToInitialize === 0) {\n      loadAsyncDependencies();\n    } // ... otherwise initialize plugins\n    else {\n      var afterPlugInitialized = function afterPlugInitialized() {\n        if (--pluginsToInitialize === 0) {\n          loadAsyncDependencies();\n        }\n      };\n\n      for (var i in plugins) {\n        var plugin = plugins[i]; // If the plugin has an 'init' method, invoke it\n\n        if (typeof plugin.init === 'function') {\n          var callback = plugin.init(); // If the plugin returned a Promise, wait for it\n\n          if (callback && typeof callback.then === 'function') {\n            callback.then(afterPlugInitialized);\n          } else {\n            afterPlugInitialized();\n          }\n        } else {\n          afterPlugInitialized();\n        }\n      }\n    }\n  }\n  /**\n   * Loads all async reveal.js dependencies.\n   */\n\n\n  function loadAsyncDependencies() {\n    if (asyncDependencies.length) {\n      asyncDependencies.forEach(function (s) {\n        loadScript(s.src, s.callback);\n      });\n    }\n\n    start();\n  }\n  /**\n   * Loads a JavaScript file from the given URL and executes it.\n   *\n   * @param {string} url Address of the .js file to load\n   * @param {function} callback Method to invoke when the script\n   * has loaded and executed\n   */\n\n\n  function loadScript(url, callback) {\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = false;\n    script.defer = false;\n    script.src = url;\n\n    if (callback) {\n      // Success callback\n      script.onload = script.onreadystatechange = function (event) {\n        if (event.type === \"load\" || /loaded|complete/.test(script.readyState)) {\n          // Kill event listeners\n          script.onload = script.onreadystatechange = script.onerror = null;\n          callback();\n        }\n      }; // Error callback\n\n\n      script.onerror = function (err) {\n        // Kill event listeners\n        script.onload = script.onreadystatechange = script.onerror = null;\n        callback(new Error('Failed loading script: ' + script.src + '\\n' + err));\n      };\n    } // Append the script at the end of <head>\n\n\n    var head = document.querySelector('head');\n    head.insertBefore(script, head.lastChild);\n  }\n  /**\n   * Starts up reveal.js by binding input events and navigating\n   * to the current URL deeplink if there is one.\n   */\n\n\n  function start() {\n    loaded = true; // Make sure we've got all the DOM elements we need\n\n    setupDOM(); // Listen to messages posted to this window\n\n    setupPostMessage(); // Prevent the slides from being scrolled out of view\n\n    setupScrollPrevention(); // Resets all vertical slides so that only the first is visible\n\n    resetVerticalSlides(); // Updates the presentation to match the current configuration values\n\n    configure(); // Read the initial hash\n\n    readURL(); // Update all backgrounds\n\n    updateBackground(true); // Notify listeners that the presentation is ready but use a 1ms\n    // timeout to ensure it's not fired synchronously after #initialize()\n\n    setTimeout(function () {\n      // Enable transitions now that we're loaded\n      dom.slides.classList.remove('no-transition');\n      dom.wrapper.classList.add('ready');\n      dispatchEvent('ready', {\n        'indexh': indexh,\n        'indexv': indexv,\n        'currentSlide': currentSlide\n      });\n    }, 1); // Special setup and config is required when printing to PDF\n\n    if (isPrintingPDF()) {\n      removeEventListeners(); // The document needs to have loaded for the PDF layout\n      // measurements to be accurate\n\n      if (document.readyState === 'complete') {\n        setupPDF();\n      } else {\n        window.addEventListener('load', setupPDF);\n      }\n    }\n  }\n  /**\n   * Finds and stores references to DOM elements which are\n   * required by the presentation. If a required element is\n   * not found, it is created.\n   */\n\n\n  function setupDOM() {\n    // Prevent transitions while we're loading\n    dom.slides.classList.add('no-transition');\n\n    if (isMobileDevice) {\n      dom.wrapper.classList.add('no-hover');\n    } else {\n      dom.wrapper.classList.remove('no-hover');\n    }\n\n    if (/iphone/gi.test(UA)) {\n      dom.wrapper.classList.add('ua-iphone');\n    } else {\n      dom.wrapper.classList.remove('ua-iphone');\n    } // Background element\n\n\n    dom.background = createSingletonNode(dom.wrapper, 'div', 'backgrounds', null); // Progress bar\n\n    dom.progress = createSingletonNode(dom.wrapper, 'div', 'progress', '<span></span>');\n    dom.progressbar = dom.progress.querySelector('span'); // Arrow controls\n\n    dom.controls = createSingletonNode(dom.wrapper, 'aside', 'controls', '<button class=\"navigate-left\" aria-label=\"previous slide\"><div class=\"controls-arrow\"></div></button>' + '<button class=\"navigate-right\" aria-label=\"next slide\"><div class=\"controls-arrow\"></div></button>' + '<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>' + '<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>'); // Slide number\n\n    dom.slideNumber = createSingletonNode(dom.wrapper, 'div', 'slide-number', ''); // Element containing notes that are visible to the audience\n\n    dom.speakerNotes = createSingletonNode(dom.wrapper, 'div', 'speaker-notes', null);\n    dom.speakerNotes.setAttribute('data-prevent-swipe', '');\n    dom.speakerNotes.setAttribute('tabindex', '0'); // Overlay graphic which is displayed during the paused mode\n\n    dom.pauseOverlay = createSingletonNode(dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null);\n    dom.wrapper.setAttribute('role', 'application'); // There can be multiple instances of controls throughout the page\n\n    dom.controlsLeft = toArray(document.querySelectorAll('.navigate-left'));\n    dom.controlsRight = toArray(document.querySelectorAll('.navigate-right'));\n    dom.controlsUp = toArray(document.querySelectorAll('.navigate-up'));\n    dom.controlsDown = toArray(document.querySelectorAll('.navigate-down'));\n    dom.controlsPrev = toArray(document.querySelectorAll('.navigate-prev'));\n    dom.controlsNext = toArray(document.querySelectorAll('.navigate-next')); // The right and down arrows in the standard reveal.js controls\n\n    dom.controlsRightArrow = dom.controls.querySelector('.navigate-right');\n    dom.controlsDownArrow = dom.controls.querySelector('.navigate-down');\n    dom.statusDiv = createStatusDiv();\n  }\n  /**\n   * Creates a hidden div with role aria-live to announce the\n   * current slide content. Hide the div off-screen to make it\n   * available only to Assistive Technologies.\n   *\n   * @return {HTMLElement}\n   */\n\n\n  function createStatusDiv() {\n    var statusDiv = document.getElementById('aria-status-div');\n\n    if (!statusDiv) {\n      statusDiv = document.createElement('div');\n      statusDiv.style.position = 'absolute';\n      statusDiv.style.height = '1px';\n      statusDiv.style.width = '1px';\n      statusDiv.style.overflow = 'hidden';\n      statusDiv.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n      statusDiv.setAttribute('id', 'aria-status-div');\n      statusDiv.setAttribute('aria-live', 'polite');\n      statusDiv.setAttribute('aria-atomic', 'true');\n      dom.wrapper.appendChild(statusDiv);\n    }\n\n    return statusDiv;\n  }\n  /**\n   * Converts the given HTML element into a string of text\n   * that can be announced to a screen reader. Hidden\n   * elements are excluded.\n   */\n\n\n  function getStatusText(node) {\n    var text = ''; // Text node\n\n    if (node.nodeType === 3) {\n      text += node.textContent;\n    } // Element node\n    else if (node.nodeType === 1) {\n      var isAriaHidden = node.getAttribute('aria-hidden');\n      var isDisplayHidden = window.getComputedStyle(node)['display'] === 'none';\n\n      if (isAriaHidden !== 'true' && !isDisplayHidden) {\n        toArray(node.childNodes).forEach(function (child) {\n          text += getStatusText(child);\n        });\n      }\n    }\n\n    return text;\n  }\n  /**\n   * Configures the presentation for printing to a static\n   * PDF.\n   */\n\n\n  function setupPDF() {\n    var slideSize = getComputedSlideSize(window.innerWidth, window.innerHeight); // Dimensions of the PDF pages\n\n    var pageWidth = Math.floor(slideSize.width * (1 + config.margin)),\n        pageHeight = Math.floor(slideSize.height * (1 + config.margin)); // Dimensions of slides within the pages\n\n    var slideWidth = slideSize.width,\n        slideHeight = slideSize.height; // Let the browser know what page size we want to print\n\n    injectStyleSheet('@page{size:' + pageWidth + 'px ' + pageHeight + 'px; margin: 0px;}'); // Limit the size of certain elements to the dimensions of the slide\n\n    injectStyleSheet('.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: ' + slideWidth + 'px; max-height:' + slideHeight + 'px}');\n    document.body.classList.add('print-pdf');\n    document.body.style.width = pageWidth + 'px';\n    document.body.style.height = pageHeight + 'px'; // Make sure stretch elements fit on slide\n\n    layoutSlideContents(slideWidth, slideHeight); // Compute slide numbers now, before we start duplicating slides\n\n    var doingSlideNumbers = config.slideNumber && /all|print/i.test(config.showSlideNumber);\n    toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(function (slide) {\n      slide.setAttribute('data-slide-number', getSlideNumber(slide));\n    }); // Slide and slide background layout\n\n    toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(function (slide) {\n      // Vertical stacks are not centred since their section\n      // children will be\n      if (slide.classList.contains('stack') === false) {\n        // Center the slide inside of the page, giving the slide some margin\n        var left = (pageWidth - slideWidth) / 2,\n            top = (pageHeight - slideHeight) / 2;\n        var contentHeight = slide.scrollHeight;\n        var numberOfPages = Math.max(Math.ceil(contentHeight / pageHeight), 1); // Adhere to configured pages per slide limit\n\n        numberOfPages = Math.min(numberOfPages, config.pdfMaxPagesPerSlide); // Center slides vertically\n\n        if (numberOfPages === 1 && config.center || slide.classList.contains('center')) {\n          top = Math.max((pageHeight - contentHeight) / 2, 0);\n        } // Wrap the slide in a page element and hide its overflow\n        // so that no page ever flows onto another\n\n\n        var page = document.createElement('div');\n        page.className = 'pdf-page';\n        page.style.height = (pageHeight + config.pdfPageHeightOffset) * numberOfPages + 'px';\n        slide.parentNode.insertBefore(page, slide);\n        page.appendChild(slide); // Position the slide inside of the page\n\n        slide.style.left = left + 'px';\n        slide.style.top = top + 'px';\n        slide.style.width = slideWidth + 'px';\n\n        if (slide.slideBackgroundElement) {\n          page.insertBefore(slide.slideBackgroundElement, slide);\n        } // Inject notes if `showNotes` is enabled\n\n\n        if (config.showNotes) {\n          // Are there notes for this slide?\n          var notes = getSlideNotes(slide);\n\n          if (notes) {\n            var notesSpacing = 8;\n            var notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n            var notesElement = document.createElement('div');\n            notesElement.classList.add('speaker-notes');\n            notesElement.classList.add('speaker-notes-pdf');\n            notesElement.setAttribute('data-layout', notesLayout);\n            notesElement.innerHTML = notes;\n\n            if (notesLayout === 'separate-page') {\n              page.parentNode.insertBefore(notesElement, page.nextSibling);\n            } else {\n              notesElement.style.left = notesSpacing + 'px';\n              notesElement.style.bottom = notesSpacing + 'px';\n              notesElement.style.width = pageWidth - notesSpacing * 2 + 'px';\n              page.appendChild(notesElement);\n            }\n          }\n        } // Inject slide numbers if `slideNumbers` are enabled\n\n\n        if (doingSlideNumbers) {\n          var numberElement = document.createElement('div');\n          numberElement.classList.add('slide-number');\n          numberElement.classList.add('slide-number-pdf');\n          numberElement.innerHTML = slide.getAttribute('data-slide-number');\n          page.appendChild(numberElement);\n        } // Copy page and show fragments one after another\n\n\n        if (config.pdfSeparateFragments) {\n          // Each fragment 'group' is an array containing one or more\n          // fragments. Multiple fragments that appear at the same time\n          // are part of the same group.\n          var fragmentGroups = sortFragments(page.querySelectorAll('.fragment'), true);\n          var previousFragmentStep;\n          var previousPage;\n          fragmentGroups.forEach(function (fragments) {\n            // Remove 'current-fragment' from the previous group\n            if (previousFragmentStep) {\n              previousFragmentStep.forEach(function (fragment) {\n                fragment.classList.remove('current-fragment');\n              });\n            } // Show the fragments for the current index\n\n\n            fragments.forEach(function (fragment) {\n              fragment.classList.add('visible', 'current-fragment');\n            }); // Create a separate page for the current fragment state\n\n            var clonedPage = page.cloneNode(true);\n            page.parentNode.insertBefore(clonedPage, (previousPage || page).nextSibling);\n            previousFragmentStep = fragments;\n            previousPage = clonedPage;\n          }); // Reset the first/original page so that all fragments are hidden\n\n          fragmentGroups.forEach(function (fragments) {\n            fragments.forEach(function (fragment) {\n              fragment.classList.remove('visible', 'current-fragment');\n            });\n          });\n        } // Show all fragments\n        else {\n          toArray(page.querySelectorAll('.fragment:not(.fade-out)')).forEach(function (fragment) {\n            fragment.classList.add('visible');\n          });\n        }\n      }\n    }); // Notify subscribers that the PDF layout is good to go\n\n    dispatchEvent('pdf-ready');\n  }\n  /**\n   * This is an unfortunate necessity. Some actions – such as\n   * an input field being focused in an iframe or using the\n   * keyboard to expand text selection beyond the bounds of\n   * a slide – can trigger our content to be pushed out of view.\n   * This scrolling can not be prevented by hiding overflow in\n   * CSS (we already do) so we have to resort to repeatedly\n   * checking if the slides have been offset :(\n   */\n\n\n  function setupScrollPrevention() {\n    setInterval(function () {\n      if (dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0) {\n        dom.wrapper.scrollTop = 0;\n        dom.wrapper.scrollLeft = 0;\n      }\n    }, 1000);\n  }\n  /**\n   * Creates an HTML element and returns a reference to it.\n   * If the element already exists the existing instance will\n   * be returned.\n   *\n   * @param {HTMLElement} container\n   * @param {string} tagname\n   * @param {string} classname\n   * @param {string} innerHTML\n   *\n   * @return {HTMLElement}\n   */\n\n\n  function createSingletonNode(container, tagname, classname, innerHTML) {\n    // Find all nodes matching the description\n    var nodes = container.querySelectorAll('.' + classname); // Check all matches to find one which is a direct child of\n    // the specified container\n\n    for (var i = 0; i < nodes.length; i++) {\n      var testNode = nodes[i];\n\n      if (testNode.parentNode === container) {\n        return testNode;\n      }\n    } // If no node was found, create it now\n\n\n    var node = document.createElement(tagname);\n    node.className = classname;\n\n    if (typeof innerHTML === 'string') {\n      node.innerHTML = innerHTML;\n    }\n\n    container.appendChild(node);\n    return node;\n  }\n  /**\n   * Creates the slide background elements and appends them\n   * to the background container. One element is created per\n   * slide no matter if the given slide has visible background.\n   */\n\n\n  function createBackgrounds() {\n    var printMode = isPrintingPDF(); // Clear prior backgrounds\n\n    dom.background.innerHTML = '';\n    dom.background.classList.add('no-transition'); // Iterate over all horizontal slides\n\n    toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)).forEach(function (slideh) {\n      var backgroundStack = createBackground(slideh, dom.background); // Iterate over all vertical slides\n\n      toArray(slideh.querySelectorAll('section')).forEach(function (slidev) {\n        createBackground(slidev, backgroundStack);\n        backgroundStack.classList.add('stack');\n      });\n    }); // Add parallax background if specified\n\n    if (config.parallaxBackgroundImage) {\n      dom.background.style.backgroundImage = 'url(\"' + config.parallaxBackgroundImage + '\")';\n      dom.background.style.backgroundSize = config.parallaxBackgroundSize;\n      dom.background.style.backgroundRepeat = config.parallaxBackgroundRepeat;\n      dom.background.style.backgroundPosition = config.parallaxBackgroundPosition; // Make sure the below properties are set on the element - these properties are\n      // needed for proper transitions to be set on the element via CSS. To remove\n      // annoying background slide-in effect when the presentation starts, apply\n      // these properties after short time delay\n\n      setTimeout(function () {\n        dom.wrapper.classList.add('has-parallax-background');\n      }, 1);\n    } else {\n      dom.background.style.backgroundImage = '';\n      dom.wrapper.classList.remove('has-parallax-background');\n    }\n  }\n  /**\n   * Creates a background for the given slide.\n   *\n   * @param {HTMLElement} slide\n   * @param {HTMLElement} container The element that the background\n   * should be appended to\n   * @return {HTMLElement} New background div\n   */\n\n\n  function createBackground(slide, container) {\n    // Main slide background element\n    var element = document.createElement('div');\n    element.className = 'slide-background ' + slide.className.replace(/present|past|future/, ''); // Inner background element that wraps images/videos/iframes\n\n    var contentElement = document.createElement('div');\n    contentElement.className = 'slide-background-content';\n    element.appendChild(contentElement);\n    container.appendChild(element);\n    slide.slideBackgroundElement = element;\n    slide.slideBackgroundContentElement = contentElement; // Syncs the background to reflect all current background settings\n\n    syncBackground(slide);\n    return element;\n  }\n  /**\n   * Renders all of the visual properties of a slide background\n   * based on the various background attributes.\n   *\n   * @param {HTMLElement} slide\n   */\n\n\n  function syncBackground(slide) {\n    var element = slide.slideBackgroundElement,\n        contentElement = slide.slideBackgroundContentElement; // Reset the prior background state in case this is not the\n    // initial sync\n\n    slide.classList.remove('has-dark-background');\n    slide.classList.remove('has-light-background');\n    element.removeAttribute('data-loaded');\n    element.removeAttribute('data-background-hash');\n    element.removeAttribute('data-background-size');\n    element.removeAttribute('data-background-transition');\n    element.style.backgroundColor = '';\n    contentElement.style.backgroundSize = '';\n    contentElement.style.backgroundRepeat = '';\n    contentElement.style.backgroundPosition = '';\n    contentElement.style.backgroundImage = '';\n    contentElement.style.opacity = '';\n    contentElement.innerHTML = '';\n    var data = {\n      background: slide.getAttribute('data-background'),\n      backgroundSize: slide.getAttribute('data-background-size'),\n      backgroundImage: slide.getAttribute('data-background-image'),\n      backgroundVideo: slide.getAttribute('data-background-video'),\n      backgroundIframe: slide.getAttribute('data-background-iframe'),\n      backgroundColor: slide.getAttribute('data-background-color'),\n      backgroundRepeat: slide.getAttribute('data-background-repeat'),\n      backgroundPosition: slide.getAttribute('data-background-position'),\n      backgroundTransition: slide.getAttribute('data-background-transition'),\n      backgroundOpacity: slide.getAttribute('data-background-opacity')\n    };\n\n    if (data.background) {\n      // Auto-wrap image urls in url(...)\n      if (/^(http|file|\\/\\/)/gi.test(data.background) || /\\.(svg|png|jpg|jpeg|gif|bmp)([?#\\s]|$)/gi.test(data.background)) {\n        slide.setAttribute('data-background-image', data.background);\n      } else {\n        element.style.background = data.background;\n      }\n    } // Create a hash for this combination of background settings.\n    // This is used to determine when two slide backgrounds are\n    // the same.\n\n\n    if (data.background || data.backgroundColor || data.backgroundImage || data.backgroundVideo || data.backgroundIframe) {\n      element.setAttribute('data-background-hash', data.background + data.backgroundSize + data.backgroundImage + data.backgroundVideo + data.backgroundIframe + data.backgroundColor + data.backgroundRepeat + data.backgroundPosition + data.backgroundTransition + data.backgroundOpacity);\n    } // Additional and optional background properties\n\n\n    if (data.backgroundSize) element.setAttribute('data-background-size', data.backgroundSize);\n    if (data.backgroundColor) element.style.backgroundColor = data.backgroundColor;\n    if (data.backgroundTransition) element.setAttribute('data-background-transition', data.backgroundTransition);\n    if (slide.hasAttribute('data-preload')) element.setAttribute('data-preload', ''); // Background image options are set on the content wrapper\n\n    if (data.backgroundSize) contentElement.style.backgroundSize = data.backgroundSize;\n    if (data.backgroundRepeat) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n    if (data.backgroundPosition) contentElement.style.backgroundPosition = data.backgroundPosition;\n    if (data.backgroundOpacity) contentElement.style.opacity = data.backgroundOpacity; // If this slide has a background color, we add a class that\n    // signals if it is light or dark. If the slide has no background\n    // color, no class will be added\n\n    var contrastColor = data.backgroundColor; // If no bg color was found, check the computed background\n\n    if (!contrastColor) {\n      var computedBackgroundStyle = window.getComputedStyle(element);\n\n      if (computedBackgroundStyle && computedBackgroundStyle.backgroundColor) {\n        contrastColor = computedBackgroundStyle.backgroundColor;\n      }\n    }\n\n    if (contrastColor) {\n      var rgb = colorToRgb(contrastColor); // Ignore fully transparent backgrounds. Some browsers return\n      // rgba(0,0,0,0) when reading the computed background color of\n      // an element with no background\n\n      if (rgb && rgb.a !== 0) {\n        if (colorBrightness(contrastColor) < 128) {\n          slide.classList.add('has-dark-background');\n        } else {\n          slide.classList.add('has-light-background');\n        }\n      }\n    }\n  }\n  /**\n   * Registers a listener to postMessage events, this makes it\n   * possible to call all reveal.js API methods from another\n   * window. For example:\n   *\n   * revealWindow.postMessage( JSON.stringify({\n   *   method: 'slide',\n   *   args: [ 2 ]\n   * }), '*' );\n   */\n\n\n  function setupPostMessage() {\n    if (config.postMessage) {\n      window.addEventListener('message', function (event) {\n        var data = event.data; // Make sure we're dealing with JSON\n\n        if (typeof data === 'string' && data.charAt(0) === '{' && data.charAt(data.length - 1) === '}') {\n          data = JSON.parse(data); // Check if the requested method can be found\n\n          if (data.method && typeof Reveal[data.method] === 'function') {\n            if (POST_MESSAGE_METHOD_BLACKLIST.test(data.method) === false) {\n              var result = Reveal[data.method].apply(Reveal, data.args); // Dispatch a postMessage event with the returned value from\n              // our method invocation for getter functions\n\n              dispatchPostMessage('callback', {\n                method: data.method,\n                result: result\n              });\n            } else {\n              console.warn('reveal.js: \"' + data.method + '\" is is blacklisted from the postMessage API');\n            }\n          }\n        }\n      }, false);\n    }\n  }\n  /**\n   * Applies the configuration settings from the config\n   * object. May be called multiple times.\n   *\n   * @param {object} options\n   */\n\n\n  function configure(options) {\n    var oldTransition = config.transition; // New config options may be passed when this method\n    // is invoked through the API after initialization\n\n    if (typeof options === 'object') extend(config, options); // Abort if reveal.js hasn't finished loading, config\n    // changes will be applied automatically once loading\n    // finishes\n\n    if (loaded === false) return;\n    var numberOfSlides = dom.wrapper.querySelectorAll(SLIDES_SELECTOR).length; // Remove the previously configured transition class\n\n    dom.wrapper.classList.remove(oldTransition); // Force linear transition based on browser capabilities\n\n    if (features.transforms3d === false) config.transition = 'linear';\n    dom.wrapper.classList.add(config.transition);\n    dom.wrapper.setAttribute('data-transition-speed', config.transitionSpeed);\n    dom.wrapper.setAttribute('data-background-transition', config.backgroundTransition);\n    dom.controls.style.display = config.controls ? 'block' : 'none';\n    dom.progress.style.display = config.progress ? 'block' : 'none';\n    dom.controls.setAttribute('data-controls-layout', config.controlsLayout);\n    dom.controls.setAttribute('data-controls-back-arrows', config.controlsBackArrows);\n\n    if (config.shuffle) {\n      shuffle();\n    }\n\n    if (config.rtl) {\n      dom.wrapper.classList.add('rtl');\n    } else {\n      dom.wrapper.classList.remove('rtl');\n    }\n\n    if (config.center) {\n      dom.wrapper.classList.add('center');\n    } else {\n      dom.wrapper.classList.remove('center');\n    } // Exit the paused mode if it was configured off\n\n\n    if (config.pause === false) {\n      resume();\n    }\n\n    if (config.showNotes) {\n      dom.speakerNotes.setAttribute('data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline');\n    }\n\n    if (config.mouseWheel) {\n      document.addEventListener('DOMMouseScroll', onDocumentMouseScroll, false); // FF\n\n      document.addEventListener('mousewheel', onDocumentMouseScroll, false);\n    } else {\n      document.removeEventListener('DOMMouseScroll', onDocumentMouseScroll, false); // FF\n\n      document.removeEventListener('mousewheel', onDocumentMouseScroll, false);\n    } // Rolling 3D links\n\n\n    if (config.rollingLinks) {\n      enableRollingLinks();\n    } else {\n      disableRollingLinks();\n    } // Auto-hide the mouse pointer when its inactive\n\n\n    if (config.hideInactiveCursor) {\n      document.addEventListener('mousemove', onDocumentCursorActive, false);\n      document.addEventListener('mousedown', onDocumentCursorActive, false);\n    } else {\n      showCursor();\n      document.removeEventListener('mousemove', onDocumentCursorActive, false);\n      document.removeEventListener('mousedown', onDocumentCursorActive, false);\n    } // Iframe link previews\n\n\n    if (config.previewLinks) {\n      enablePreviewLinks();\n      disablePreviewLinks('[data-preview-link=false]');\n    } else {\n      disablePreviewLinks();\n      enablePreviewLinks('[data-preview-link]:not([data-preview-link=false])');\n    } // Remove existing auto-slide controls\n\n\n    if (autoSlidePlayer) {\n      autoSlidePlayer.destroy();\n      autoSlidePlayer = null;\n    } // Generate auto-slide controls if needed\n\n\n    if (numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable && features.canvas && features.requestAnimationFrame) {\n      autoSlidePlayer = new Playback(dom.wrapper, function () {\n        return Math.min(Math.max((Date.now() - autoSlideStartTime) / autoSlide, 0), 1);\n      });\n      autoSlidePlayer.on('click', onAutoSlidePlayerClick);\n      autoSlidePaused = false;\n    } // When fragments are turned off they should be visible\n\n\n    if (config.fragments === false) {\n      toArray(dom.slides.querySelectorAll('.fragment')).forEach(function (element) {\n        element.classList.add('visible');\n        element.classList.remove('current-fragment');\n      });\n    } // Slide numbers\n\n\n    var slideNumberDisplay = 'none';\n\n    if (config.slideNumber && !isPrintingPDF()) {\n      if (config.showSlideNumber === 'all') {\n        slideNumberDisplay = 'block';\n      } else if (config.showSlideNumber === 'speaker' && isSpeakerNotes()) {\n        slideNumberDisplay = 'block';\n      }\n    }\n\n    dom.slideNumber.style.display = slideNumberDisplay; // Add the navigation mode to the DOM so we can adjust styling\n\n    if (config.navigationMode !== 'default') {\n      dom.wrapper.setAttribute('data-navigation-mode', config.navigationMode);\n    } else {\n      dom.wrapper.removeAttribute('data-navigation-mode');\n    } // Define our contextual list of keyboard shortcuts\n\n\n    if (config.navigationMode === 'linear') {\n      keyboardShortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n      keyboardShortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K'] = 'Previous slide';\n    } else {\n      keyboardShortcuts['N  ,  SPACE'] = 'Next slide';\n      keyboardShortcuts['P'] = 'Previous slide';\n      keyboardShortcuts['&#8592;  ,  H'] = 'Navigate left';\n      keyboardShortcuts['&#8594;  ,  L'] = 'Navigate right';\n      keyboardShortcuts['&#8593;  ,  K'] = 'Navigate up';\n      keyboardShortcuts['&#8595;  ,  J'] = 'Navigate down';\n    }\n\n    keyboardShortcuts['Home  ,  Shift &#8592;'] = 'First slide';\n    keyboardShortcuts['End  ,  Shift &#8594;'] = 'Last slide';\n    keyboardShortcuts['B  ,  .'] = 'Pause';\n    keyboardShortcuts['F'] = 'Fullscreen';\n    keyboardShortcuts['ESC, O'] = 'Slide overview';\n    sync();\n  }\n  /**\n   * Binds all event listeners.\n   */\n\n\n  function addEventListeners() {\n    eventsAreBound = true;\n    window.addEventListener('hashchange', onWindowHashChange, false);\n    window.addEventListener('resize', onWindowResize, false);\n\n    if (config.touch) {\n      if ('onpointerdown' in window) {\n        // Use W3C pointer events\n        dom.wrapper.addEventListener('pointerdown', onPointerDown, false);\n        dom.wrapper.addEventListener('pointermove', onPointerMove, false);\n        dom.wrapper.addEventListener('pointerup', onPointerUp, false);\n      } else if (window.navigator.msPointerEnabled) {\n        // IE 10 uses prefixed version of pointer events\n        dom.wrapper.addEventListener('MSPointerDown', onPointerDown, false);\n        dom.wrapper.addEventListener('MSPointerMove', onPointerMove, false);\n        dom.wrapper.addEventListener('MSPointerUp', onPointerUp, false);\n      } else {\n        // Fall back to touch events\n        dom.wrapper.addEventListener('touchstart', onTouchStart, false);\n        dom.wrapper.addEventListener('touchmove', onTouchMove, false);\n        dom.wrapper.addEventListener('touchend', onTouchEnd, false);\n      }\n    }\n\n    if (config.keyboard) {\n      document.addEventListener('keydown', onDocumentKeyDown, false);\n      document.addEventListener('keypress', onDocumentKeyPress, false);\n    }\n\n    if (config.progress && dom.progress) {\n      dom.progress.addEventListener('click', onProgressClicked, false);\n    }\n\n    dom.pauseOverlay.addEventListener('click', resume, false);\n\n    if (config.focusBodyOnPageVisibilityChange) {\n      var visibilityChange;\n\n      if ('hidden' in document) {\n        visibilityChange = 'visibilitychange';\n      } else if ('msHidden' in document) {\n        visibilityChange = 'msvisibilitychange';\n      } else if ('webkitHidden' in document) {\n        visibilityChange = 'webkitvisibilitychange';\n      }\n\n      if (visibilityChange) {\n        document.addEventListener(visibilityChange, onPageVisibilityChange, false);\n      }\n    } // Listen to both touch and click events, in case the device\n    // supports both\n\n\n    var pointerEvents = ['touchstart', 'click']; // Only support touch for Android, fixes double navigations in\n    // stock browser\n\n    if (UA.match(/android/gi)) {\n      pointerEvents = ['touchstart'];\n    }\n\n    pointerEvents.forEach(function (eventName) {\n      dom.controlsLeft.forEach(function (el) {\n        el.addEventListener(eventName, onNavigateLeftClicked, false);\n      });\n      dom.controlsRight.forEach(function (el) {\n        el.addEventListener(eventName, onNavigateRightClicked, false);\n      });\n      dom.controlsUp.forEach(function (el) {\n        el.addEventListener(eventName, onNavigateUpClicked, false);\n      });\n      dom.controlsDown.forEach(function (el) {\n        el.addEventListener(eventName, onNavigateDownClicked, false);\n      });\n      dom.controlsPrev.forEach(function (el) {\n        el.addEventListener(eventName, onNavigatePrevClicked, false);\n      });\n      dom.controlsNext.forEach(function (el) {\n        el.addEventListener(eventName, onNavigateNextClicked, false);\n      });\n    });\n  }\n  /**\n   * Unbinds all event listeners.\n   */\n\n\n  function removeEventListeners() {\n    eventsAreBound = false;\n    document.removeEventListener('keydown', onDocumentKeyDown, false);\n    document.removeEventListener('keypress', onDocumentKeyPress, false);\n    window.removeEventListener('hashchange', onWindowHashChange, false);\n    window.removeEventListener('resize', onWindowResize, false);\n    dom.wrapper.removeEventListener('pointerdown', onPointerDown, false);\n    dom.wrapper.removeEventListener('pointermove', onPointerMove, false);\n    dom.wrapper.removeEventListener('pointerup', onPointerUp, false);\n    dom.wrapper.removeEventListener('MSPointerDown', onPointerDown, false);\n    dom.wrapper.removeEventListener('MSPointerMove', onPointerMove, false);\n    dom.wrapper.removeEventListener('MSPointerUp', onPointerUp, false);\n    dom.wrapper.removeEventListener('touchstart', onTouchStart, false);\n    dom.wrapper.removeEventListener('touchmove', onTouchMove, false);\n    dom.wrapper.removeEventListener('touchend', onTouchEnd, false);\n    dom.pauseOverlay.removeEventListener('click', resume, false);\n\n    if (config.progress && dom.progress) {\n      dom.progress.removeEventListener('click', onProgressClicked, false);\n    }\n\n    ['touchstart', 'click'].forEach(function (eventName) {\n      dom.controlsLeft.forEach(function (el) {\n        el.removeEventListener(eventName, onNavigateLeftClicked, false);\n      });\n      dom.controlsRight.forEach(function (el) {\n        el.removeEventListener(eventName, onNavigateRightClicked, false);\n      });\n      dom.controlsUp.forEach(function (el) {\n        el.removeEventListener(eventName, onNavigateUpClicked, false);\n      });\n      dom.controlsDown.forEach(function (el) {\n        el.removeEventListener(eventName, onNavigateDownClicked, false);\n      });\n      dom.controlsPrev.forEach(function (el) {\n        el.removeEventListener(eventName, onNavigatePrevClicked, false);\n      });\n      dom.controlsNext.forEach(function (el) {\n        el.removeEventListener(eventName, onNavigateNextClicked, false);\n      });\n    });\n  }\n  /**\n   * Registers a new plugin with this reveal.js instance.\n   *\n   * reveal.js waits for all regisered plugins to initialize\n   * before considering itself ready, as long as the plugin\n   * is registered before calling `Reveal.initialize()`.\n   */\n\n\n  function registerPlugin(id, plugin) {\n    if (plugins[id] === undefined) {\n      plugins[id] = plugin; // If a plugin is registered after reveal.js is loaded,\n      // initialize it right away\n\n      if (loaded && typeof plugin.init === 'function') {\n        plugin.init();\n      }\n    } else {\n      console.warn('reveal.js: \"' + id + '\" plugin has already been registered');\n    }\n  }\n  /**\n   * Checks if a specific plugin has been registered.\n   *\n   * @param {String} id Unique plugin identifier\n   */\n\n\n  function hasPlugin(id) {\n    return !!plugins[id];\n  }\n  /**\n   * Returns the specific plugin instance, if a plugin\n   * with the given ID has been registered.\n   *\n   * @param {String} id Unique plugin identifier\n   */\n\n\n  function getPlugin(id) {\n    return plugins[id];\n  }\n  /**\n   * Add a custom key binding with optional description to\n   * be added to the help screen.\n   */\n\n\n  function addKeyBinding(binding, callback) {\n    if (typeof binding === 'object' && binding.keyCode) {\n      registeredKeyBindings[binding.keyCode] = {\n        callback: callback,\n        key: binding.key,\n        description: binding.description\n      };\n    } else {\n      registeredKeyBindings[binding] = {\n        callback: callback,\n        key: null,\n        description: null\n      };\n    }\n  }\n  /**\n   * Removes the specified custom key binding.\n   */\n\n\n  function removeKeyBinding(keyCode) {\n    delete registeredKeyBindings[keyCode];\n  }\n  /**\n   * Extend object a with the properties of object b.\n   * If there's a conflict, object b takes precedence.\n   *\n   * @param {object} a\n   * @param {object} b\n   */\n\n\n  function extend(a, b) {\n    for (var i in b) {\n      a[i] = b[i];\n    }\n\n    return a;\n  }\n  /**\n   * Converts the target object to an array.\n   *\n   * @param {object} o\n   * @return {object[]}\n   */\n\n\n  function toArray(o) {\n    return Array.prototype.slice.call(o);\n  }\n  /**\n   * Utility for deserializing a value.\n   *\n   * @param {*} value\n   * @return {*}\n   */\n\n\n  function deserialize(value) {\n    if (typeof value === 'string') {\n      if (value === 'null') return null;else if (value === 'true') return true;else if (value === 'false') return false;else if (value.match(/^-?[\\d\\.]+$/)) return parseFloat(value);\n    }\n\n    return value;\n  }\n  /**\n   * Measures the distance in pixels between point a\n   * and point b.\n   *\n   * @param {object} a point with x/y properties\n   * @param {object} b point with x/y properties\n   *\n   * @return {number}\n   */\n\n\n  function distanceBetween(a, b) {\n    var dx = a.x - b.x,\n        dy = a.y - b.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n  /**\n   * Applies a CSS transform to the target element.\n   *\n   * @param {HTMLElement} element\n   * @param {string} transform\n   */\n\n\n  function transformElement(element, transform) {\n    element.style.WebkitTransform = transform;\n    element.style.MozTransform = transform;\n    element.style.msTransform = transform;\n    element.style.transform = transform;\n  }\n  /**\n   * Applies CSS transforms to the slides container. The container\n   * is transformed from two separate sources: layout and the overview\n   * mode.\n   *\n   * @param {object} transforms\n   */\n\n\n  function transformSlides(transforms) {\n    // Pick up new transforms from arguments\n    if (typeof transforms.layout === 'string') slidesTransform.layout = transforms.layout;\n    if (typeof transforms.overview === 'string') slidesTransform.overview = transforms.overview; // Apply the transforms to the slides container\n\n    if (slidesTransform.layout) {\n      transformElement(dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview);\n    } else {\n      transformElement(dom.slides, slidesTransform.overview);\n    }\n  }\n  /**\n   * Injects the given CSS styles into the DOM.\n   *\n   * @param {string} value\n   */\n\n\n  function injectStyleSheet(value) {\n    var tag = document.createElement('style');\n    tag.type = 'text/css';\n\n    if (tag.styleSheet) {\n      tag.styleSheet.cssText = value;\n    } else {\n      tag.appendChild(document.createTextNode(value));\n    }\n\n    document.getElementsByTagName('head')[0].appendChild(tag);\n  }\n  /**\n   * Find the closest parent that matches the given\n   * selector.\n   *\n   * @param {HTMLElement} target The child element\n   * @param {String} selector The CSS selector to match\n   * the parents against\n   *\n   * @return {HTMLElement} The matched parent or null\n   * if no matching parent was found\n   */\n\n\n  function closestParent(target, selector) {\n    var parent = target.parentNode;\n\n    while (parent) {\n      // There's some overhead doing this each time, we don't\n      // want to rewrite the element prototype but should still\n      // be enough to feature detect once at startup...\n      var matchesMethod = parent.matches || parent.matchesSelector || parent.msMatchesSelector; // If we find a match, we're all set\n\n      if (matchesMethod && matchesMethod.call(parent, selector)) {\n        return parent;\n      } // Keep searching\n\n\n      parent = parent.parentNode;\n    }\n\n    return null;\n  }\n  /**\n   * Converts various color input formats to an {r:0,g:0,b:0} object.\n   *\n   * @param {string} color The string representation of a color\n   * @example\n   * colorToRgb('#000');\n   * @example\n   * colorToRgb('#000000');\n   * @example\n   * colorToRgb('rgb(0,0,0)');\n   * @example\n   * colorToRgb('rgba(0,0,0)');\n   *\n   * @return {{r: number, g: number, b: number, [a]: number}|null}\n   */\n\n\n  function colorToRgb(color) {\n    var hex3 = color.match(/^#([0-9a-f]{3})$/i);\n\n    if (hex3 && hex3[1]) {\n      hex3 = hex3[1];\n      return {\n        r: parseInt(hex3.charAt(0), 16) * 0x11,\n        g: parseInt(hex3.charAt(1), 16) * 0x11,\n        b: parseInt(hex3.charAt(2), 16) * 0x11\n      };\n    }\n\n    var hex6 = color.match(/^#([0-9a-f]{6})$/i);\n\n    if (hex6 && hex6[1]) {\n      hex6 = hex6[1];\n      return {\n        r: parseInt(hex6.substr(0, 2), 16),\n        g: parseInt(hex6.substr(2, 2), 16),\n        b: parseInt(hex6.substr(4, 2), 16)\n      };\n    }\n\n    var rgb = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n\n    if (rgb) {\n      return {\n        r: parseInt(rgb[1], 10),\n        g: parseInt(rgb[2], 10),\n        b: parseInt(rgb[3], 10)\n      };\n    }\n\n    var rgba = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i);\n\n    if (rgba) {\n      return {\n        r: parseInt(rgba[1], 10),\n        g: parseInt(rgba[2], 10),\n        b: parseInt(rgba[3], 10),\n        a: parseFloat(rgba[4])\n      };\n    }\n\n    return null;\n  }\n  /**\n   * Calculates brightness on a scale of 0-255.\n   *\n   * @param {string} color See colorToRgb for supported formats.\n   * @see {@link colorToRgb}\n   */\n\n\n  function colorBrightness(color) {\n    if (typeof color === 'string') color = colorToRgb(color);\n\n    if (color) {\n      return (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\n    }\n\n    return null;\n  }\n  /**\n   * Returns the remaining height within the parent of the\n   * target element.\n   *\n   * remaining height = [ configured parent height ] - [ current parent height ]\n   *\n   * @param {HTMLElement} element\n   * @param {number} [height]\n   */\n\n\n  function getRemainingHeight(element, height) {\n    height = height || 0;\n\n    if (element) {\n      var newHeight,\n          oldHeight = element.style.height; // Change the .stretch element height to 0 in order find the height of all\n      // the other elements\n\n      element.style.height = '0px'; // In Overview mode, the parent (.slide) height is set of 700px.\n      // Restore it temporarily to its natural height.\n\n      element.parentNode.style.height = 'auto';\n      newHeight = height - element.parentNode.offsetHeight; // Restore the old height, just in case\n\n      element.style.height = oldHeight + 'px'; // Clear the parent (.slide) height. .removeProperty works in IE9+\n\n      element.parentNode.style.removeProperty('height');\n      return newHeight;\n    }\n\n    return height;\n  }\n  /**\n   * Checks if this instance is being used to print a PDF.\n   */\n\n\n  function isPrintingPDF() {\n    return /print-pdf/gi.test(window.location.search);\n  }\n  /**\n   * Hides the address bar if we're on a mobile device.\n   */\n\n\n  function hideAddressBar() {\n    if (config.hideAddressBar && isMobileDevice) {\n      // Events that should trigger the address bar to hide\n      window.addEventListener('load', removeAddressBar, false);\n      window.addEventListener('orientationchange', removeAddressBar, false);\n    }\n  }\n  /**\n   * Causes the address bar to hide on mobile devices,\n   * more vertical space ftw.\n   */\n\n\n  function removeAddressBar() {\n    setTimeout(function () {\n      window.scrollTo(0, 1);\n    }, 10);\n  }\n  /**\n   * Dispatches an event of the specified type from the\n   * reveal DOM element.\n   */\n\n\n  function dispatchEvent(type, args) {\n    var event = document.createEvent('HTMLEvents', 1, 2);\n    event.initEvent(type, true, true);\n    extend(event, args);\n    dom.wrapper.dispatchEvent(event); // If we're in an iframe, post each reveal.js event to the\n    // parent window. Used by the notes plugin\n\n    dispatchPostMessage(type);\n  }\n  /**\n   * Dispatched a postMessage of the given type from our window.\n   */\n\n\n  function dispatchPostMessage(type, data) {\n    if (config.postMessageEvents && window.parent !== window.self) {\n      var message = {\n        namespace: 'reveal',\n        eventName: type,\n        state: getState()\n      };\n      extend(message, data);\n      window.parent.postMessage(JSON.stringify(message), '*');\n    }\n  }\n  /**\n   * Wrap all links in 3D goodness.\n   */\n\n\n  function enableRollingLinks() {\n    if (features.transforms3d && !('msPerspective' in document.body.style)) {\n      var anchors = dom.wrapper.querySelectorAll(SLIDES_SELECTOR + ' a');\n\n      for (var i = 0, len = anchors.length; i < len; i++) {\n        var anchor = anchors[i];\n\n        if (anchor.textContent && !anchor.querySelector('*') && (!anchor.className || !anchor.classList.contains(anchor, 'roll'))) {\n          var span = document.createElement('span');\n          span.setAttribute('data-title', anchor.text);\n          span.innerHTML = anchor.innerHTML;\n          anchor.classList.add('roll');\n          anchor.innerHTML = '';\n          anchor.appendChild(span);\n        }\n      }\n    }\n  }\n  /**\n   * Unwrap all 3D links.\n   */\n\n\n  function disableRollingLinks() {\n    var anchors = dom.wrapper.querySelectorAll(SLIDES_SELECTOR + ' a.roll');\n\n    for (var i = 0, len = anchors.length; i < len; i++) {\n      var anchor = anchors[i];\n      var span = anchor.querySelector('span');\n\n      if (span) {\n        anchor.classList.remove('roll');\n        anchor.innerHTML = span.innerHTML;\n      }\n    }\n  }\n  /**\n   * Bind preview frame links.\n   *\n   * @param {string} [selector=a] - selector for anchors\n   */\n\n\n  function enablePreviewLinks(selector) {\n    var anchors = toArray(document.querySelectorAll(selector ? selector : 'a'));\n    anchors.forEach(function (element) {\n      if (/^(http|www)/gi.test(element.getAttribute('href'))) {\n        element.addEventListener('click', onPreviewLinkClicked, false);\n      }\n    });\n  }\n  /**\n   * Unbind preview frame links.\n   */\n\n\n  function disablePreviewLinks(selector) {\n    var anchors = toArray(document.querySelectorAll(selector ? selector : 'a'));\n    anchors.forEach(function (element) {\n      if (/^(http|www)/gi.test(element.getAttribute('href'))) {\n        element.removeEventListener('click', onPreviewLinkClicked, false);\n      }\n    });\n  }\n  /**\n   * Opens a preview window for the target URL.\n   *\n   * @param {string} url - url for preview iframe src\n   */\n\n\n  function showPreview(url) {\n    closeOverlay();\n    dom.overlay = document.createElement('div');\n    dom.overlay.classList.add('overlay');\n    dom.overlay.classList.add('overlay-preview');\n    dom.wrapper.appendChild(dom.overlay);\n    dom.overlay.innerHTML = ['<header>', '<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>', '<a class=\"external\" href=\"' + url + '\" target=\"_blank\"><span class=\"icon\"></span></a>', '</header>', '<div class=\"spinner\"></div>', '<div class=\"viewport\">', '<iframe src=\"' + url + '\"></iframe>', '<small class=\"viewport-inner\">', '<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site\\'s policy (x-frame-options).</span>', '</small>', '</div>'].join('');\n    dom.overlay.querySelector('iframe').addEventListener('load', function (event) {\n      dom.overlay.classList.add('loaded');\n    }, false);\n    dom.overlay.querySelector('.close').addEventListener('click', function (event) {\n      closeOverlay();\n      event.preventDefault();\n    }, false);\n    dom.overlay.querySelector('.external').addEventListener('click', function (event) {\n      closeOverlay();\n    }, false);\n    setTimeout(function () {\n      dom.overlay.classList.add('visible');\n    }, 1);\n  }\n  /**\n   * Open or close help overlay window.\n   *\n   * @param {Boolean} [override] Flag which overrides the\n   * toggle logic and forcibly sets the desired state. True means\n   * help is open, false means it's closed.\n   */\n\n\n  function toggleHelp(override) {\n    if (typeof override === 'boolean') {\n      override ? showHelp() : closeOverlay();\n    } else {\n      if (dom.overlay) {\n        closeOverlay();\n      } else {\n        showHelp();\n      }\n    }\n  }\n  /**\n   * Opens an overlay window with help material.\n   */\n\n\n  function showHelp() {\n    if (config.help) {\n      closeOverlay();\n      dom.overlay = document.createElement('div');\n      dom.overlay.classList.add('overlay');\n      dom.overlay.classList.add('overlay-help');\n      dom.wrapper.appendChild(dom.overlay);\n      var html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n      html += '<table><th>KEY</th><th>ACTION</th>';\n\n      for (var key in keyboardShortcuts) {\n        html += '<tr><td>' + key + '</td><td>' + keyboardShortcuts[key] + '</td></tr>';\n      } // Add custom key bindings that have associated descriptions\n\n\n      for (var binding in registeredKeyBindings) {\n        if (registeredKeyBindings[binding].key && registeredKeyBindings[binding].description) {\n          html += '<tr><td>' + registeredKeyBindings[binding].key + '</td><td>' + registeredKeyBindings[binding].description + '</td></tr>';\n        }\n      }\n\n      html += '</table>';\n      dom.overlay.innerHTML = ['<header>', '<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>', '</header>', '<div class=\"viewport\">', '<div class=\"viewport-inner\">' + html + '</div>', '</div>'].join('');\n      dom.overlay.querySelector('.close').addEventListener('click', function (event) {\n        closeOverlay();\n        event.preventDefault();\n      }, false);\n      setTimeout(function () {\n        dom.overlay.classList.add('visible');\n      }, 1);\n    }\n  }\n  /**\n   * Closes any currently open overlay.\n   */\n\n\n  function closeOverlay() {\n    if (dom.overlay) {\n      dom.overlay.parentNode.removeChild(dom.overlay);\n      dom.overlay = null;\n    }\n  }\n  /**\n   * Applies JavaScript-controlled layout rules to the\n   * presentation.\n   */\n\n\n  function layout() {\n    if (dom.wrapper && !isPrintingPDF()) {\n      if (!config.disableLayout) {\n        // On some mobile devices '100vh' is taller than the visible\n        // viewport which leads to part of the presentation being\n        // cut off. To work around this we define our own '--vh' custom\n        // property where 100x adds up to the correct height.\n        //\n        // https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n        if (isMobileDevice) {\n          document.documentElement.style.setProperty('--vh', window.innerHeight * 0.01 + 'px');\n        }\n\n        var size = getComputedSlideSize();\n        var oldScale = scale; // Layout the contents of the slides\n\n        layoutSlideContents(config.width, config.height);\n        dom.slides.style.width = size.width + 'px';\n        dom.slides.style.height = size.height + 'px'; // Determine scale of content to fit within available space\n\n        scale = Math.min(size.presentationWidth / size.width, size.presentationHeight / size.height); // Respect max/min scale settings\n\n        scale = Math.max(scale, config.minScale);\n        scale = Math.min(scale, config.maxScale); // Don't apply any scaling styles if scale is 1\n\n        if (scale === 1) {\n          dom.slides.style.zoom = '';\n          dom.slides.style.left = '';\n          dom.slides.style.top = '';\n          dom.slides.style.bottom = '';\n          dom.slides.style.right = '';\n          transformSlides({\n            layout: ''\n          });\n        } else {\n          // Zoom Scaling\n          // Content remains crisp no matter how much we scale. Side\n          // effects are minor differences in text layout and iframe\n          // viewports changing size. A 200x200 iframe viewport in a\n          // 2x zoomed presentation ends up having a 400x400 viewport.\n          if (scale > 1 && features.zoom && window.devicePixelRatio < 2) {\n            dom.slides.style.zoom = scale;\n            dom.slides.style.left = '';\n            dom.slides.style.top = '';\n            dom.slides.style.bottom = '';\n            dom.slides.style.right = '';\n            transformSlides({\n              layout: ''\n            });\n          } // Transform Scaling\n          // Content layout remains the exact same when scaled up.\n          // Side effect is content becoming blurred, especially with\n          // high scale values on ldpi screens.\n          else {\n            dom.slides.style.zoom = '';\n            dom.slides.style.left = '50%';\n            dom.slides.style.top = '50%';\n            dom.slides.style.bottom = 'auto';\n            dom.slides.style.right = 'auto';\n            transformSlides({\n              layout: 'translate(-50%, -50%) scale(' + scale + ')'\n            });\n          }\n        } // Select all slides, vertical and horizontal\n\n\n        var slides = toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR));\n\n        for (var i = 0, len = slides.length; i < len; i++) {\n          var slide = slides[i]; // Don't bother updating invisible slides\n\n          if (slide.style.display === 'none') {\n            continue;\n          }\n\n          if (config.center || slide.classList.contains('center')) {\n            // Vertical stacks are not centred since their section\n            // children will be\n            if (slide.classList.contains('stack')) {\n              slide.style.top = 0;\n            } else {\n              slide.style.top = Math.max((size.height - slide.scrollHeight) / 2, 0) + 'px';\n            }\n          } else {\n            slide.style.top = '';\n          }\n        }\n\n        if (oldScale !== scale) {\n          dispatchEvent('resize', {\n            'oldScale': oldScale,\n            'scale': scale,\n            'size': size\n          });\n        }\n      }\n\n      updateProgress();\n      updateParallax();\n\n      if (isOverview()) {\n        updateOverview();\n      }\n    }\n  }\n  /**\n   * Applies layout logic to the contents of all slides in\n   * the presentation.\n   *\n   * @param {string|number} width\n   * @param {string|number} height\n   */\n\n\n  function layoutSlideContents(width, height) {\n    // Handle sizing of elements with the 'stretch' class\n    toArray(dom.slides.querySelectorAll('section > .stretch')).forEach(function (element) {\n      // Determine how much vertical space we can use\n      var remainingHeight = getRemainingHeight(element, height); // Consider the aspect ratio of media elements\n\n      if (/(img|video)/gi.test(element.nodeName)) {\n        var nw = element.naturalWidth || element.videoWidth,\n            nh = element.naturalHeight || element.videoHeight;\n        var es = Math.min(width / nw, remainingHeight / nh);\n        element.style.width = nw * es + 'px';\n        element.style.height = nh * es + 'px';\n      } else {\n        element.style.width = width + 'px';\n        element.style.height = remainingHeight + 'px';\n      }\n    });\n  }\n  /**\n   * Calculates the computed pixel size of our slides. These\n   * values are based on the width and height configuration\n   * options.\n   *\n   * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n   * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n   */\n\n\n  function getComputedSlideSize(presentationWidth, presentationHeight) {\n    var size = {\n      // Slide size\n      width: config.width,\n      height: config.height,\n      // Presentation size\n      presentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n      presentationHeight: presentationHeight || dom.wrapper.offsetHeight\n    }; // Reduce available space by margin\n\n    size.presentationWidth -= size.presentationWidth * config.margin;\n    size.presentationHeight -= size.presentationHeight * config.margin; // Slide width may be a percentage of available width\n\n    if (typeof size.width === 'string' && /%$/.test(size.width)) {\n      size.width = parseInt(size.width, 10) / 100 * size.presentationWidth;\n    } // Slide height may be a percentage of available height\n\n\n    if (typeof size.height === 'string' && /%$/.test(size.height)) {\n      size.height = parseInt(size.height, 10) / 100 * size.presentationHeight;\n    }\n\n    return size;\n  }\n  /**\n   * Stores the vertical index of a stack so that the same\n   * vertical slide can be selected when navigating to and\n   * from the stack.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   * @param {string|number} [v=0] Index to memorize\n   */\n\n\n  function setPreviousVerticalIndex(stack, v) {\n    if (typeof stack === 'object' && typeof stack.setAttribute === 'function') {\n      stack.setAttribute('data-previous-indexv', v || 0);\n    }\n  }\n  /**\n   * Retrieves the vertical index which was stored using\n   * #setPreviousVerticalIndex() or 0 if no previous index\n   * exists.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   */\n\n\n  function getPreviousVerticalIndex(stack) {\n    if (typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains('stack')) {\n      // Prefer manually defined start-indexv\n      var attributeName = stack.hasAttribute('data-start-indexv') ? 'data-start-indexv' : 'data-previous-indexv';\n      return parseInt(stack.getAttribute(attributeName) || 0, 10);\n    }\n\n    return 0;\n  }\n  /**\n   * Displays the overview of slides (quick nav) by scaling\n   * down and arranging all slide elements.\n   */\n\n\n  function activateOverview() {\n    // Only proceed if enabled in config\n    if (config.overview && !isOverview()) {\n      overview = true;\n      dom.wrapper.classList.add('overview');\n      dom.wrapper.classList.remove('overview-deactivating');\n\n      if (features.overviewTransitions) {\n        setTimeout(function () {\n          dom.wrapper.classList.add('overview-animated');\n        }, 1);\n      } // Don't auto-slide while in overview mode\n\n\n      cancelAutoSlide(); // Move the backgrounds element into the slide container to\n      // that the same scaling is applied\n\n      dom.slides.appendChild(dom.background); // Clicking on an overview slide navigates to it\n\n      toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(function (slide) {\n        if (!slide.classList.contains('stack')) {\n          slide.addEventListener('click', onOverviewSlideClicked, true);\n        }\n      }); // Calculate slide sizes\n\n      var margin = 70;\n      var slideSize = getComputedSlideSize();\n      overviewSlideWidth = slideSize.width + margin;\n      overviewSlideHeight = slideSize.height + margin; // Reverse in RTL mode\n\n      if (config.rtl) {\n        overviewSlideWidth = -overviewSlideWidth;\n      }\n\n      updateSlidesVisibility();\n      layoutOverview();\n      updateOverview();\n      layout(); // Notify observers of the overview showing\n\n      dispatchEvent('overviewshown', {\n        'indexh': indexh,\n        'indexv': indexv,\n        'currentSlide': currentSlide\n      });\n    }\n  }\n  /**\n   * Uses CSS transforms to position all slides in a grid for\n   * display inside of the overview mode.\n   */\n\n\n  function layoutOverview() {\n    // Layout slides\n    toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)).forEach(function (hslide, h) {\n      hslide.setAttribute('data-index-h', h);\n      transformElement(hslide, 'translate3d(' + h * overviewSlideWidth + 'px, 0, 0)');\n\n      if (hslide.classList.contains('stack')) {\n        toArray(hslide.querySelectorAll('section')).forEach(function (vslide, v) {\n          vslide.setAttribute('data-index-h', h);\n          vslide.setAttribute('data-index-v', v);\n          transformElement(vslide, 'translate3d(0, ' + v * overviewSlideHeight + 'px, 0)');\n        });\n      }\n    }); // Layout slide backgrounds\n\n    toArray(dom.background.childNodes).forEach(function (hbackground, h) {\n      transformElement(hbackground, 'translate3d(' + h * overviewSlideWidth + 'px, 0, 0)');\n      toArray(hbackground.querySelectorAll('.slide-background')).forEach(function (vbackground, v) {\n        transformElement(vbackground, 'translate3d(0, ' + v * overviewSlideHeight + 'px, 0)');\n      });\n    });\n  }\n  /**\n   * Moves the overview viewport to the current slides.\n   * Called each time the current slide changes.\n   */\n\n\n  function updateOverview() {\n    var vmin = Math.min(window.innerWidth, window.innerHeight);\n    var scale = Math.max(vmin / 5, 150) / vmin;\n    transformSlides({\n      overview: ['scale(' + scale + ')', 'translateX(' + -indexh * overviewSlideWidth + 'px)', 'translateY(' + -indexv * overviewSlideHeight + 'px)'].join(' ')\n    });\n  }\n  /**\n   * Exits the slide overview and enters the currently\n   * active slide.\n   */\n\n\n  function deactivateOverview() {\n    // Only proceed if enabled in config\n    if (config.overview) {\n      overview = false;\n      dom.wrapper.classList.remove('overview');\n      dom.wrapper.classList.remove('overview-animated'); // Temporarily add a class so that transitions can do different things\n      // depending on whether they are exiting/entering overview, or just\n      // moving from slide to slide\n\n      dom.wrapper.classList.add('overview-deactivating');\n      setTimeout(function () {\n        dom.wrapper.classList.remove('overview-deactivating');\n      }, 1); // Move the background element back out\n\n      dom.wrapper.appendChild(dom.background); // Clean up changes made to slides\n\n      toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(function (slide) {\n        transformElement(slide, '');\n        slide.removeEventListener('click', onOverviewSlideClicked, true);\n      }); // Clean up changes made to backgrounds\n\n      toArray(dom.background.querySelectorAll('.slide-background')).forEach(function (background) {\n        transformElement(background, '');\n      });\n      transformSlides({\n        overview: ''\n      });\n      slide(indexh, indexv);\n      layout();\n      cueAutoSlide(); // Notify observers of the overview hiding\n\n      dispatchEvent('overviewhidden', {\n        'indexh': indexh,\n        'indexv': indexv,\n        'currentSlide': currentSlide\n      });\n    }\n  }\n  /**\n   * Toggles the slide overview mode on and off.\n   *\n   * @param {Boolean} [override] Flag which overrides the\n   * toggle logic and forcibly sets the desired state. True means\n   * overview is open, false means it's closed.\n   */\n\n\n  function toggleOverview(override) {\n    if (typeof override === 'boolean') {\n      override ? activateOverview() : deactivateOverview();\n    } else {\n      isOverview() ? deactivateOverview() : activateOverview();\n    }\n  }\n  /**\n   * Checks if the overview is currently active.\n   *\n   * @return {Boolean} true if the overview is active,\n   * false otherwise\n   */\n\n\n  function isOverview() {\n    return overview;\n  }\n  /**\n   * Return a hash URL that will resolve to the given slide location.\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide to link to\n   */\n\n\n  function locationHash(slide) {\n    var url = '/'; // Attempt to create a named link based on the slide's ID\n\n    var s = slide || currentSlide;\n    var id = s ? s.getAttribute('id') : null;\n\n    if (id) {\n      id = encodeURIComponent(id);\n    }\n\n    var index = getIndices(slide);\n\n    if (!config.fragmentInURL) {\n      index.f = undefined;\n    } // If the current slide has an ID, use that as a named link,\n    // but we don't support named links with a fragment index\n\n\n    if (typeof id === 'string' && id.length && index.f === undefined) {\n      url = '/' + id;\n    } // Otherwise use the /h/v index\n    else {\n      var hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n      if (index.h > 0 || index.v > 0 || index.f !== undefined) url += index.h + hashIndexBase;\n      if (index.v > 0 || index.f !== undefined) url += '/' + (index.v + hashIndexBase);\n      if (index.f !== undefined) url += '/' + index.f;\n    }\n\n    return url;\n  }\n  /**\n   * Checks if the current or specified slide is vertical\n   * (nested within another slide).\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide to check\n   * orientation of\n   * @return {Boolean}\n   */\n\n\n  function isVerticalSlide(slide) {\n    // Prefer slide argument, otherwise use current slide\n    slide = slide ? slide : currentSlide;\n    return slide && slide.parentNode && !!slide.parentNode.nodeName.match(/section/i);\n  }\n  /**\n   * Handling the fullscreen functionality via the fullscreen API\n   *\n   * @see http://fullscreen.spec.whatwg.org/\n   * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n   */\n\n\n  function enterFullscreen() {\n    var element = document.documentElement; // Check which implementation is available\n\n    var requestMethod = element.requestFullscreen || element.webkitRequestFullscreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || element.msRequestFullscreen;\n\n    if (requestMethod) {\n      requestMethod.apply(element);\n    }\n  }\n  /**\n   * Shows the mouse pointer after it has been hidden with\n   * #hideCursor.\n   */\n\n\n  function showCursor() {\n    if (cursorHidden) {\n      cursorHidden = false;\n      dom.wrapper.style.cursor = '';\n    }\n  }\n  /**\n   * Hides the mouse pointer when it's on top of the .reveal\n   * container.\n   */\n\n\n  function hideCursor() {\n    if (cursorHidden === false) {\n      cursorHidden = true;\n      dom.wrapper.style.cursor = 'none';\n    }\n  }\n  /**\n   * Enters the paused mode which fades everything on screen to\n   * black.\n   */\n\n\n  function pause() {\n    if (config.pause) {\n      var wasPaused = dom.wrapper.classList.contains('paused');\n      cancelAutoSlide();\n      dom.wrapper.classList.add('paused');\n\n      if (wasPaused === false) {\n        dispatchEvent('paused');\n      }\n    }\n  }\n  /**\n   * Exits from the paused mode.\n   */\n\n\n  function resume() {\n    var wasPaused = dom.wrapper.classList.contains('paused');\n    dom.wrapper.classList.remove('paused');\n    cueAutoSlide();\n\n    if (wasPaused) {\n      dispatchEvent('resumed');\n    }\n  }\n  /**\n   * Toggles the paused mode on and off.\n   */\n\n\n  function togglePause(override) {\n    if (typeof override === 'boolean') {\n      override ? pause() : resume();\n    } else {\n      isPaused() ? resume() : pause();\n    }\n  }\n  /**\n   * Checks if we are currently in the paused mode.\n   *\n   * @return {Boolean}\n   */\n\n\n  function isPaused() {\n    return dom.wrapper.classList.contains('paused');\n  }\n  /**\n   * Toggles the auto slide mode on and off.\n   *\n   * @param {Boolean} [override] Flag which sets the desired state.\n   * True means autoplay starts, false means it stops.\n   */\n\n\n  function toggleAutoSlide(override) {\n    if (typeof override === 'boolean') {\n      override ? resumeAutoSlide() : pauseAutoSlide();\n    } else {\n      autoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n    }\n  }\n  /**\n   * Checks if the auto slide mode is currently on.\n   *\n   * @return {Boolean}\n   */\n\n\n  function isAutoSliding() {\n    return !!(autoSlide && !autoSlidePaused);\n  }\n  /**\n   * Steps from the current point in the presentation to the\n   * slide which matches the specified horizontal and vertical\n   * indices.\n   *\n   * @param {number} [h=indexh] Horizontal index of the target slide\n   * @param {number} [v=indexv] Vertical index of the target slide\n   * @param {number} [f] Index of a fragment within the\n   * target slide to activate\n   * @param {number} [o] Origin for use in multimaster environments\n   */\n\n\n  function slide(h, v, f, o) {\n    // Remember where we were at before\n    previousSlide = currentSlide; // Query all horizontal slides in the deck\n\n    var horizontalSlides = dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR); // Abort if there are no slides\n\n    if (horizontalSlides.length === 0) return; // If no vertical index is specified and the upcoming slide is a\n    // stack, resume at its previous vertical index\n\n    if (v === undefined && !isOverview()) {\n      v = getPreviousVerticalIndex(horizontalSlides[h]);\n    } // If we were on a vertical stack, remember what vertical index\n    // it was on so we can resume at the same position when returning\n\n\n    if (previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains('stack')) {\n      setPreviousVerticalIndex(previousSlide.parentNode, indexv);\n    } // Remember the state before this slide\n\n\n    var stateBefore = state.concat(); // Reset the state array\n\n    state.length = 0;\n    var indexhBefore = indexh || 0,\n        indexvBefore = indexv || 0; // Activate and transition to the new slide\n\n    indexh = updateSlides(HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h);\n    indexv = updateSlides(VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v); // Update the visibility of slides now that the indices have changed\n\n    updateSlidesVisibility();\n    layout(); // Update the overview if it's currently active\n\n    if (isOverview()) {\n      updateOverview();\n    } // Find the current horizontal slide and any possible vertical slides\n    // within it\n\n\n    var currentHorizontalSlide = horizontalSlides[indexh],\n        currentVerticalSlides = currentHorizontalSlide.querySelectorAll('section'); // Store references to the previous and current slides\n\n    currentSlide = currentVerticalSlides[indexv] || currentHorizontalSlide; // Show fragment, if specified\n\n    if (typeof f !== 'undefined') {\n      navigateFragment(f);\n    } // Dispatch an event if the slide changed\n\n\n    var slideChanged = indexh !== indexhBefore || indexv !== indexvBefore;\n\n    if (!slideChanged) {\n      // Ensure that the previous slide is never the same as the current\n      previousSlide = null;\n    } // Solves an edge case where the previous slide maintains the\n    // 'present' class when navigating between adjacent vertical\n    // stacks\n\n\n    if (previousSlide && previousSlide !== currentSlide) {\n      previousSlide.classList.remove('present');\n      previousSlide.setAttribute('aria-hidden', 'true'); // Reset all slides upon navigate to home\n      // Issue: #285\n\n      if (dom.wrapper.querySelector(HOME_SLIDE_SELECTOR).classList.contains('present')) {\n        // Launch async task\n        setTimeout(function () {\n          var slides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR + '.stack')),\n              i;\n\n          for (i in slides) {\n            if (slides[i]) {\n              // Reset stack\n              setPreviousVerticalIndex(slides[i], 0);\n            }\n          }\n        }, 0);\n      }\n    } // Apply the new state\n\n\n    stateLoop: for (var i = 0, len = state.length; i < len; i++) {\n      // Check if this state existed on the previous slide. If it\n      // did, we will avoid adding it repeatedly\n      for (var j = 0; j < stateBefore.length; j++) {\n        if (stateBefore[j] === state[i]) {\n          stateBefore.splice(j, 1);\n          continue stateLoop;\n        }\n      }\n\n      document.documentElement.classList.add(state[i]); // Dispatch custom event matching the state's name\n\n      dispatchEvent(state[i]);\n    } // Clean up the remains of the previous state\n\n\n    while (stateBefore.length) {\n      document.documentElement.classList.remove(stateBefore.pop());\n    }\n\n    if (slideChanged) {\n      dispatchEvent('slidechanged', {\n        'indexh': indexh,\n        'indexv': indexv,\n        'previousSlide': previousSlide,\n        'currentSlide': currentSlide,\n        'origin': o\n      });\n    } // Handle embedded content\n\n\n    if (slideChanged || !previousSlide) {\n      stopEmbeddedContent(previousSlide);\n      startEmbeddedContent(currentSlide);\n    } // Announce the current slide contents, for screen readers\n\n\n    dom.statusDiv.textContent = getStatusText(currentSlide);\n    updateControls();\n    updateProgress();\n    updateBackground();\n    updateParallax();\n    updateSlideNumber();\n    updateNotes();\n    updateFragments(); // Update the URL hash\n\n    writeURL();\n    cueAutoSlide();\n  }\n  /**\n   * Syncs the presentation with the current DOM. Useful\n   * when new slides or control elements are added or when\n   * the configuration has changed.\n   */\n\n\n  function sync() {\n    // Subscribe to input\n    removeEventListeners();\n    addEventListeners(); // Force a layout to make sure the current config is accounted for\n\n    layout(); // Reflect the current autoSlide value\n\n    autoSlide = config.autoSlide; // Start auto-sliding if it's enabled\n\n    cueAutoSlide(); // Re-create the slide backgrounds\n\n    createBackgrounds(); // Write the current hash to the URL\n\n    writeURL();\n    sortAllFragments();\n    updateControls();\n    updateProgress();\n    updateSlideNumber();\n    updateSlidesVisibility();\n    updateBackground(true);\n    updateNotesVisibility();\n    updateNotes();\n    formatEmbeddedContent(); // Start or stop embedded content depending on global config\n\n    if (config.autoPlayMedia === false) {\n      stopEmbeddedContent(currentSlide, {\n        unloadIframes: false\n      });\n    } else {\n      startEmbeddedContent(currentSlide);\n    }\n\n    if (isOverview()) {\n      layoutOverview();\n    }\n  }\n  /**\n   * Updates reveal.js to keep in sync with new slide attributes. For\n   * example, if you add a new `data-background-image` you can call\n   * this to have reveal.js render the new background image.\n   *\n   * Similar to #sync() but more efficient when you only need to\n   * refresh a specific slide.\n   *\n   * @param {HTMLElement} slide\n   */\n\n\n  function syncSlide(slide) {\n    // Default to the current slide\n    slide = slide || currentSlide;\n    syncBackground(slide);\n    syncFragments(slide);\n    loadSlide(slide);\n    updateBackground();\n    updateNotes();\n  }\n  /**\n   * Formats the fragments on the given slide so that they have\n   * valid indices. Call this if fragments are changed in the DOM\n   * after reveal.js has already initialized.\n   *\n   * @param {HTMLElement} slide\n   * @return {Array} a list of the HTML fragments that were synced\n   */\n\n\n  function syncFragments(slide) {\n    // Default to the current slide\n    slide = slide || currentSlide;\n    return sortFragments(slide.querySelectorAll('.fragment'));\n  }\n  /**\n   * Resets all vertical slides so that only the first\n   * is visible.\n   */\n\n\n  function resetVerticalSlides() {\n    var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n    horizontalSlides.forEach(function (horizontalSlide) {\n      var verticalSlides = toArray(horizontalSlide.querySelectorAll('section'));\n      verticalSlides.forEach(function (verticalSlide, y) {\n        if (y > 0) {\n          verticalSlide.classList.remove('present');\n          verticalSlide.classList.remove('past');\n          verticalSlide.classList.add('future');\n          verticalSlide.setAttribute('aria-hidden', 'true');\n        }\n      });\n    });\n  }\n  /**\n   * Sorts and formats all of fragments in the\n   * presentation.\n   */\n\n\n  function sortAllFragments() {\n    var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n    horizontalSlides.forEach(function (horizontalSlide) {\n      var verticalSlides = toArray(horizontalSlide.querySelectorAll('section'));\n      verticalSlides.forEach(function (verticalSlide, y) {\n        sortFragments(verticalSlide.querySelectorAll('.fragment'));\n      });\n      if (verticalSlides.length === 0) sortFragments(horizontalSlide.querySelectorAll('.fragment'));\n    });\n  }\n  /**\n   * Randomly shuffles all slides in the deck.\n   */\n\n\n  function shuffle() {\n    var slides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n    slides.forEach(function (slide) {\n      // Insert this slide next to another random slide. This may\n      // cause the slide to insert before itself but that's fine.\n      dom.slides.insertBefore(slide, slides[Math.floor(Math.random() * slides.length)]);\n    });\n  }\n  /**\n   * Updates one dimension of slides by showing the slide\n   * with the specified index.\n   *\n   * @param {string} selector A CSS selector that will fetch\n   * the group of slides we are working with\n   * @param {number} index The index of the slide that should be\n   * shown\n   *\n   * @return {number} The index of the slide that is now shown,\n   * might differ from the passed in index if it was out of\n   * bounds.\n   */\n\n\n  function updateSlides(selector, index) {\n    // Select all slides and convert the NodeList result to\n    // an array\n    var slides = toArray(dom.wrapper.querySelectorAll(selector)),\n        slidesLength = slides.length;\n    var printMode = isPrintingPDF();\n\n    if (slidesLength) {\n      // Should the index loop?\n      if (config.loop) {\n        index %= slidesLength;\n\n        if (index < 0) {\n          index = slidesLength + index;\n        }\n      } // Enforce max and minimum index bounds\n\n\n      index = Math.max(Math.min(index, slidesLength - 1), 0);\n\n      for (var i = 0; i < slidesLength; i++) {\n        var element = slides[i];\n        var reverse = config.rtl && !isVerticalSlide(element);\n        element.classList.remove('past');\n        element.classList.remove('present');\n        element.classList.remove('future'); // http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\n        element.setAttribute('hidden', '');\n        element.setAttribute('aria-hidden', 'true'); // If this element contains vertical slides\n\n        if (element.querySelector('section')) {\n          element.classList.add('stack');\n        } // If we're printing static slides, all slides are \"present\"\n\n\n        if (printMode) {\n          element.classList.add('present');\n          continue;\n        }\n\n        if (i < index) {\n          // Any element previous to index is given the 'past' class\n          element.classList.add(reverse ? 'future' : 'past');\n\n          if (config.fragments) {\n            // Show all fragments in prior slides\n            toArray(element.querySelectorAll('.fragment')).forEach(function (fragment) {\n              fragment.classList.add('visible');\n              fragment.classList.remove('current-fragment');\n            });\n          }\n        } else if (i > index) {\n          // Any element subsequent to index is given the 'future' class\n          element.classList.add(reverse ? 'past' : 'future');\n\n          if (config.fragments) {\n            // Hide all fragments in future slides\n            toArray(element.querySelectorAll('.fragment.visible')).forEach(function (fragment) {\n              fragment.classList.remove('visible');\n              fragment.classList.remove('current-fragment');\n            });\n          }\n        }\n      } // Mark the current slide as present\n\n\n      slides[index].classList.add('present');\n      slides[index].removeAttribute('hidden');\n      slides[index].removeAttribute('aria-hidden'); // If this slide has a state associated with it, add it\n      // onto the current state of the deck\n\n      var slideState = slides[index].getAttribute('data-state');\n\n      if (slideState) {\n        state = state.concat(slideState.split(' '));\n      }\n    } else {\n      // Since there are no slides we can't be anywhere beyond the\n      // zeroth index\n      index = 0;\n    }\n\n    return index;\n  }\n  /**\n   * Optimization method; hide all slides that are far away\n   * from the present slide.\n   */\n\n\n  function updateSlidesVisibility() {\n    // Select all slides and convert the NodeList result to\n    // an array\n    var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)),\n        horizontalSlidesLength = horizontalSlides.length,\n        distanceX,\n        distanceY;\n\n    if (horizontalSlidesLength && typeof indexh !== 'undefined') {\n      // The number of steps away from the present slide that will\n      // be visible\n      var viewDistance = isOverview() ? 10 : config.viewDistance; // Shorten the view distance on devices that typically have\n      // less resources\n\n      if (isMobileDevice) {\n        viewDistance = isOverview() ? 6 : config.mobileViewDistance;\n      } // All slides need to be visible when exporting to PDF\n\n\n      if (isPrintingPDF()) {\n        viewDistance = Number.MAX_VALUE;\n      }\n\n      for (var x = 0; x < horizontalSlidesLength; x++) {\n        var horizontalSlide = horizontalSlides[x];\n        var verticalSlides = toArray(horizontalSlide.querySelectorAll('section')),\n            verticalSlidesLength = verticalSlides.length; // Determine how far away this slide is from the present\n\n        distanceX = Math.abs((indexh || 0) - x) || 0; // If the presentation is looped, distance should measure\n        // 1 between the first and last slides\n\n        if (config.loop) {\n          distanceX = Math.abs(((indexh || 0) - x) % (horizontalSlidesLength - viewDistance)) || 0;\n        } // Show the horizontal slide if it's within the view distance\n\n\n        if (distanceX < viewDistance) {\n          loadSlide(horizontalSlide);\n        } else {\n          unloadSlide(horizontalSlide);\n        }\n\n        if (verticalSlidesLength) {\n          var oy = getPreviousVerticalIndex(horizontalSlide);\n\n          for (var y = 0; y < verticalSlidesLength; y++) {\n            var verticalSlide = verticalSlides[y];\n            distanceY = x === (indexh || 0) ? Math.abs((indexv || 0) - y) : Math.abs(y - oy);\n\n            if (distanceX + distanceY < viewDistance) {\n              loadSlide(verticalSlide);\n            } else {\n              unloadSlide(verticalSlide);\n            }\n          }\n        }\n      } // Flag if there are ANY vertical slides, anywhere in the deck\n\n\n      if (hasVerticalSlides()) {\n        dom.wrapper.classList.add('has-vertical-slides');\n      } else {\n        dom.wrapper.classList.remove('has-vertical-slides');\n      } // Flag if there are ANY horizontal slides, anywhere in the deck\n\n\n      if (hasHorizontalSlides()) {\n        dom.wrapper.classList.add('has-horizontal-slides');\n      } else {\n        dom.wrapper.classList.remove('has-horizontal-slides');\n      }\n    }\n  }\n  /**\n   * Pick up notes from the current slide and display them\n   * to the viewer.\n   *\n   * @see {@link config.showNotes}\n   */\n\n\n  function updateNotes() {\n    if (config.showNotes && dom.speakerNotes && currentSlide && !isPrintingPDF()) {\n      dom.speakerNotes.innerHTML = getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n    }\n  }\n  /**\n   * Updates the visibility of the speaker notes sidebar that\n   * is used to share annotated slides. The notes sidebar is\n   * only visible if showNotes is true and there are notes on\n   * one or more slides in the deck.\n   */\n\n\n  function updateNotesVisibility() {\n    if (config.showNotes && hasNotes()) {\n      dom.wrapper.classList.add('show-notes');\n    } else {\n      dom.wrapper.classList.remove('show-notes');\n    }\n  }\n  /**\n   * Checks if there are speaker notes for ANY slide in the\n   * presentation.\n   */\n\n\n  function hasNotes() {\n    return dom.slides.querySelectorAll('[data-notes], aside.notes').length > 0;\n  }\n  /**\n   * Updates the progress bar to reflect the current slide.\n   */\n\n\n  function updateProgress() {\n    // Update progress if enabled\n    if (config.progress && dom.progressbar) {\n      dom.progressbar.style.width = getProgress() * dom.wrapper.offsetWidth + 'px';\n    }\n  }\n  /**\n   * Updates the slide number to match the current slide.\n   */\n\n\n  function updateSlideNumber() {\n    // Update slide number if enabled\n    if (config.slideNumber && dom.slideNumber) {\n      dom.slideNumber.innerHTML = getSlideNumber();\n    }\n  }\n  /**\n   * Returns the HTML string corresponding to the current slide number,\n   * including formatting.\n   */\n\n\n  function getSlideNumber(slide) {\n    var value;\n    var format = 'h.v';\n\n    if (slide === undefined) {\n      slide = currentSlide;\n    }\n\n    if (typeof config.slideNumber === 'function') {\n      value = config.slideNumber(slide);\n    } else {\n      // Check if a custom number format is available\n      if (typeof config.slideNumber === 'string') {\n        format = config.slideNumber;\n      } // If there are ONLY vertical slides in this deck, always use\n      // a flattened slide number\n\n\n      if (!/c/.test(format) && dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR).length === 1) {\n        format = 'c';\n      }\n\n      value = [];\n\n      switch (format) {\n        case 'c':\n          value.push(getSlidePastCount(slide) + 1);\n          break;\n\n        case 'c/t':\n          value.push(getSlidePastCount(slide) + 1, '/', getTotalSlides());\n          break;\n\n        default:\n          var indices = getIndices(slide);\n          value.push(indices.h + 1);\n          var sep = format === 'h/v' ? '/' : '.';\n          if (isVerticalSlide(slide)) value.push(sep, indices.v + 1);\n      }\n    }\n\n    var url = '#' + locationHash(slide);\n    return formatSlideNumber(value[0], value[1], value[2], url);\n  }\n  /**\n   * Applies HTML formatting to a slide number before it's\n   * written to the DOM.\n   *\n   * @param {number} a Current slide\n   * @param {string} delimiter Character to separate slide numbers\n   * @param {(number|*)} b Total slides\n   * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n   * @return {string} HTML string fragment\n   */\n\n\n  function formatSlideNumber(a, delimiter, b, url) {\n    if (url === undefined) {\n      url = '#' + locationHash();\n    }\n\n    if (typeof b === 'number' && !isNaN(b)) {\n      return '<a href=\"' + url + '\">' + '<span class=\"slide-number-a\">' + a + '</span>' + '<span class=\"slide-number-delimiter\">' + delimiter + '</span>' + '<span class=\"slide-number-b\">' + b + '</span>' + '</a>';\n    } else {\n      return '<a href=\"' + url + '\">' + '<span class=\"slide-number-a\">' + a + '</span>' + '</a>';\n    }\n  }\n  /**\n   * Updates the state of all control/navigation arrows.\n   */\n\n\n  function updateControls() {\n    var routes = availableRoutes();\n    var fragments = availableFragments(); // Remove the 'enabled' class from all directions\n\n    dom.controlsLeft.concat(dom.controlsRight).concat(dom.controlsUp).concat(dom.controlsDown).concat(dom.controlsPrev).concat(dom.controlsNext).forEach(function (node) {\n      node.classList.remove('enabled');\n      node.classList.remove('fragmented'); // Set 'disabled' attribute on all directions\n\n      node.setAttribute('disabled', 'disabled');\n    }); // Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\n    if (routes.left) dom.controlsLeft.forEach(function (el) {\n      el.classList.add('enabled');\n      el.removeAttribute('disabled');\n    });\n    if (routes.right) dom.controlsRight.forEach(function (el) {\n      el.classList.add('enabled');\n      el.removeAttribute('disabled');\n    });\n    if (routes.up) dom.controlsUp.forEach(function (el) {\n      el.classList.add('enabled');\n      el.removeAttribute('disabled');\n    });\n    if (routes.down) dom.controlsDown.forEach(function (el) {\n      el.classList.add('enabled');\n      el.removeAttribute('disabled');\n    }); // Prev/next buttons\n\n    if (routes.left || routes.up) dom.controlsPrev.forEach(function (el) {\n      el.classList.add('enabled');\n      el.removeAttribute('disabled');\n    });\n    if (routes.right || routes.down) dom.controlsNext.forEach(function (el) {\n      el.classList.add('enabled');\n      el.removeAttribute('disabled');\n    }); // Highlight fragment directions\n\n    if (currentSlide) {\n      // Always apply fragment decorator to prev/next buttons\n      if (fragments.prev) dom.controlsPrev.forEach(function (el) {\n        el.classList.add('fragmented', 'enabled');\n        el.removeAttribute('disabled');\n      });\n      if (fragments.next) dom.controlsNext.forEach(function (el) {\n        el.classList.add('fragmented', 'enabled');\n        el.removeAttribute('disabled');\n      }); // Apply fragment decorators to directional buttons based on\n      // what slide axis they are in\n\n      if (isVerticalSlide(currentSlide)) {\n        if (fragments.prev) dom.controlsUp.forEach(function (el) {\n          el.classList.add('fragmented', 'enabled');\n          el.removeAttribute('disabled');\n        });\n        if (fragments.next) dom.controlsDown.forEach(function (el) {\n          el.classList.add('fragmented', 'enabled');\n          el.removeAttribute('disabled');\n        });\n      } else {\n        if (fragments.prev) dom.controlsLeft.forEach(function (el) {\n          el.classList.add('fragmented', 'enabled');\n          el.removeAttribute('disabled');\n        });\n        if (fragments.next) dom.controlsRight.forEach(function (el) {\n          el.classList.add('fragmented', 'enabled');\n          el.removeAttribute('disabled');\n        });\n      }\n    }\n\n    if (config.controlsTutorial) {\n      // Highlight control arrows with an animation to ensure\n      // that the viewer knows how to navigate\n      if (!hasNavigatedDown && routes.down) {\n        dom.controlsDownArrow.classList.add('highlight');\n      } else {\n        dom.controlsDownArrow.classList.remove('highlight');\n\n        if (!hasNavigatedRight && routes.right && indexv === 0) {\n          dom.controlsRightArrow.classList.add('highlight');\n        } else {\n          dom.controlsRightArrow.classList.remove('highlight');\n        }\n      }\n    }\n  }\n  /**\n   * Updates the background elements to reflect the current\n   * slide.\n   *\n   * @param {boolean} includeAll If true, the backgrounds of\n   * all vertical slides (not just the present) will be updated.\n   */\n\n\n  function updateBackground(includeAll) {\n    var currentBackground = null; // Reverse past/future classes when in RTL mode\n\n    var horizontalPast = config.rtl ? 'future' : 'past',\n        horizontalFuture = config.rtl ? 'past' : 'future'; // Update the classes of all backgrounds to match the\n    // states of their slides (past/present/future)\n\n    toArray(dom.background.childNodes).forEach(function (backgroundh, h) {\n      backgroundh.classList.remove('past');\n      backgroundh.classList.remove('present');\n      backgroundh.classList.remove('future');\n\n      if (h < indexh) {\n        backgroundh.classList.add(horizontalPast);\n      } else if (h > indexh) {\n        backgroundh.classList.add(horizontalFuture);\n      } else {\n        backgroundh.classList.add('present'); // Store a reference to the current background element\n\n        currentBackground = backgroundh;\n      }\n\n      if (includeAll || h === indexh) {\n        toArray(backgroundh.querySelectorAll('.slide-background')).forEach(function (backgroundv, v) {\n          backgroundv.classList.remove('past');\n          backgroundv.classList.remove('present');\n          backgroundv.classList.remove('future');\n\n          if (v < indexv) {\n            backgroundv.classList.add('past');\n          } else if (v > indexv) {\n            backgroundv.classList.add('future');\n          } else {\n            backgroundv.classList.add('present'); // Only if this is the present horizontal and vertical slide\n\n            if (h === indexh) currentBackground = backgroundv;\n          }\n        });\n      }\n    }); // Stop content inside of previous backgrounds\n\n    if (previousBackground) {\n      stopEmbeddedContent(previousBackground, {\n        unloadIframes: !shouldPreload(previousBackground)\n      });\n    } // Start content in the current background\n\n\n    if (currentBackground) {\n      startEmbeddedContent(currentBackground);\n      var currentBackgroundContent = currentBackground.querySelector('.slide-background-content');\n\n      if (currentBackgroundContent) {\n        var backgroundImageURL = currentBackgroundContent.style.backgroundImage || ''; // Restart GIFs (doesn't work in Firefox)\n\n        if (/\\.gif/i.test(backgroundImageURL)) {\n          currentBackgroundContent.style.backgroundImage = '';\n          window.getComputedStyle(currentBackgroundContent).opacity;\n          currentBackgroundContent.style.backgroundImage = backgroundImageURL;\n        }\n      } // Don't transition between identical backgrounds. This\n      // prevents unwanted flicker.\n\n\n      var previousBackgroundHash = previousBackground ? previousBackground.getAttribute('data-background-hash') : null;\n      var currentBackgroundHash = currentBackground.getAttribute('data-background-hash');\n\n      if (currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== previousBackground) {\n        dom.background.classList.add('no-transition');\n      }\n\n      previousBackground = currentBackground;\n    } // If there's a background brightness flag for this slide,\n    // bubble it to the .reveal container\n\n\n    if (currentSlide) {\n      ['has-light-background', 'has-dark-background'].forEach(function (classToBubble) {\n        if (currentSlide.classList.contains(classToBubble)) {\n          dom.wrapper.classList.add(classToBubble);\n        } else {\n          dom.wrapper.classList.remove(classToBubble);\n        }\n      });\n    } // Allow the first background to apply without transition\n\n\n    setTimeout(function () {\n      dom.background.classList.remove('no-transition');\n    }, 1);\n  }\n  /**\n   * Updates the position of the parallax background based\n   * on the current slide index.\n   */\n\n\n  function updateParallax() {\n    if (config.parallaxBackgroundImage) {\n      var horizontalSlides = dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR),\n          verticalSlides = dom.wrapper.querySelectorAll(VERTICAL_SLIDES_SELECTOR);\n      var backgroundSize = dom.background.style.backgroundSize.split(' '),\n          backgroundWidth,\n          backgroundHeight;\n\n      if (backgroundSize.length === 1) {\n        backgroundWidth = backgroundHeight = parseInt(backgroundSize[0], 10);\n      } else {\n        backgroundWidth = parseInt(backgroundSize[0], 10);\n        backgroundHeight = parseInt(backgroundSize[1], 10);\n      }\n\n      var slideWidth = dom.background.offsetWidth,\n          horizontalSlideCount = horizontalSlides.length,\n          horizontalOffsetMultiplier,\n          horizontalOffset;\n\n      if (typeof config.parallaxBackgroundHorizontal === 'number') {\n        horizontalOffsetMultiplier = config.parallaxBackgroundHorizontal;\n      } else {\n        horizontalOffsetMultiplier = horizontalSlideCount > 1 ? (backgroundWidth - slideWidth) / (horizontalSlideCount - 1) : 0;\n      }\n\n      horizontalOffset = horizontalOffsetMultiplier * indexh * -1;\n      var slideHeight = dom.background.offsetHeight,\n          verticalSlideCount = verticalSlides.length,\n          verticalOffsetMultiplier,\n          verticalOffset;\n\n      if (typeof config.parallaxBackgroundVertical === 'number') {\n        verticalOffsetMultiplier = config.parallaxBackgroundVertical;\n      } else {\n        verticalOffsetMultiplier = (backgroundHeight - slideHeight) / (verticalSlideCount - 1);\n      }\n\n      verticalOffset = verticalSlideCount > 0 ? verticalOffsetMultiplier * indexv : 0;\n      dom.background.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n    }\n  }\n  /**\n   * Should the given element be preloaded?\n   * Decides based on local element attributes and global config.\n   *\n   * @param {HTMLElement} element\n   */\n\n\n  function shouldPreload(element) {\n    // Prefer an explicit global preload setting\n    var preload = config.preloadIframes; // If no global setting is available, fall back on the element's\n    // own preload setting\n\n    if (typeof preload !== 'boolean') {\n      preload = element.hasAttribute('data-preload');\n    }\n\n    return preload;\n  }\n  /**\n   * Called when the given slide is within the configured view\n   * distance. Shows the slide element and loads any content\n   * that is set to load lazily (data-src).\n   *\n   * @param {HTMLElement} slide Slide to show\n   */\n\n\n  function loadSlide(slide, options) {\n    options = options || {}; // Show the slide element\n\n    slide.style.display = config.display; // Media elements with data-src attributes\n\n    toArray(slide.querySelectorAll('img[data-src], video[data-src], audio[data-src], iframe[data-src]')).forEach(function (element) {\n      if (element.tagName !== 'IFRAME' || shouldPreload(element)) {\n        element.setAttribute('src', element.getAttribute('data-src'));\n        element.setAttribute('data-lazy-loaded', '');\n        element.removeAttribute('data-src');\n      }\n    }); // Media elements with <source> children\n\n    toArray(slide.querySelectorAll('video, audio')).forEach(function (media) {\n      var sources = 0;\n      toArray(media.querySelectorAll('source[data-src]')).forEach(function (source) {\n        source.setAttribute('src', source.getAttribute('data-src'));\n        source.removeAttribute('data-src');\n        source.setAttribute('data-lazy-loaded', '');\n        sources += 1;\n      }); // If we rewrote sources for this video/audio element, we need\n      // to manually tell it to load from its new origin\n\n      if (sources > 0) {\n        media.load();\n      }\n    }); // Show the corresponding background element\n\n    var background = slide.slideBackgroundElement;\n\n    if (background) {\n      background.style.display = 'block';\n      var backgroundContent = slide.slideBackgroundContentElement;\n      var backgroundIframe = slide.getAttribute('data-background-iframe'); // If the background contains media, load it\n\n      if (background.hasAttribute('data-loaded') === false) {\n        background.setAttribute('data-loaded', 'true');\n        var backgroundImage = slide.getAttribute('data-background-image'),\n            backgroundVideo = slide.getAttribute('data-background-video'),\n            backgroundVideoLoop = slide.hasAttribute('data-background-video-loop'),\n            backgroundVideoMuted = slide.hasAttribute('data-background-video-muted'); // Images\n\n        if (backgroundImage) {\n          backgroundContent.style.backgroundImage = 'url(' + encodeURI(backgroundImage) + ')';\n        } // Videos\n        else if (backgroundVideo && !isSpeakerNotes()) {\n          var video = document.createElement('video');\n\n          if (backgroundVideoLoop) {\n            video.setAttribute('loop', '');\n          }\n\n          if (backgroundVideoMuted) {\n            video.muted = true;\n          } // Inline video playback works (at least in Mobile Safari) as\n          // long as the video is muted and the `playsinline` attribute is\n          // present\n\n\n          if (isMobileDevice) {\n            video.muted = true;\n            video.autoplay = true;\n            video.setAttribute('playsinline', '');\n          } // Support comma separated lists of video sources\n\n\n          backgroundVideo.split(',').forEach(function (source) {\n            video.innerHTML += '<source src=\"' + source + '\">';\n          });\n          backgroundContent.appendChild(video);\n        } // Iframes\n        else if (backgroundIframe && options.excludeIframes !== true) {\n          var iframe = document.createElement('iframe');\n          iframe.setAttribute('allowfullscreen', '');\n          iframe.setAttribute('mozallowfullscreen', '');\n          iframe.setAttribute('webkitallowfullscreen', '');\n          iframe.setAttribute('allow', 'autoplay');\n          iframe.setAttribute('data-src', backgroundIframe);\n          iframe.style.width = '100%';\n          iframe.style.height = '100%';\n          iframe.style.maxHeight = '100%';\n          iframe.style.maxWidth = '100%';\n          backgroundContent.appendChild(iframe);\n        }\n      } // Start loading preloadable iframes\n\n\n      var backgroundIframeElement = backgroundContent.querySelector('iframe[data-src]');\n\n      if (backgroundIframeElement) {\n        // Check if this iframe is eligible to be preloaded\n        if (shouldPreload(background) && !/autoplay=(1|true|yes)/gi.test(backgroundIframe)) {\n          if (backgroundIframeElement.getAttribute('src') !== backgroundIframe) {\n            backgroundIframeElement.setAttribute('src', backgroundIframe);\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Unloads and hides the given slide. This is called when the\n   * slide is moved outside of the configured view distance.\n   *\n   * @param {HTMLElement} slide\n   */\n\n\n  function unloadSlide(slide) {\n    // Hide the slide element\n    slide.style.display = 'none'; // Hide the corresponding background element\n\n    var background = getSlideBackground(slide);\n\n    if (background) {\n      background.style.display = 'none'; // Unload any background iframes\n\n      toArray(background.querySelectorAll('iframe[src]')).forEach(function (element) {\n        element.removeAttribute('src');\n      });\n    } // Reset lazy-loaded media elements with src attributes\n\n\n    toArray(slide.querySelectorAll('video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]')).forEach(function (element) {\n      element.setAttribute('data-src', element.getAttribute('src'));\n      element.removeAttribute('src');\n    }); // Reset lazy-loaded media elements with <source> children\n\n    toArray(slide.querySelectorAll('video[data-lazy-loaded] source[src], audio source[src]')).forEach(function (source) {\n      source.setAttribute('data-src', source.getAttribute('src'));\n      source.removeAttribute('src');\n    });\n  }\n  /**\n   * Determine what available routes there are for navigation.\n   *\n   * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n   */\n\n\n  function availableRoutes() {\n    var horizontalSlides = dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR),\n        verticalSlides = dom.wrapper.querySelectorAll(VERTICAL_SLIDES_SELECTOR);\n    var routes = {\n      left: indexh > 0,\n      right: indexh < horizontalSlides.length - 1,\n      up: indexv > 0,\n      down: indexv < verticalSlides.length - 1\n    }; // Looped presentations can always be navigated as long as\n    // there are slides available\n\n    if (config.loop) {\n      if (horizontalSlides.length > 1) {\n        routes.left = true;\n        routes.right = true;\n      }\n\n      if (verticalSlides.length > 1) {\n        routes.up = true;\n        routes.down = true;\n      }\n    } // Reverse horizontal controls for rtl\n\n\n    if (config.rtl) {\n      var left = routes.left;\n      routes.left = routes.right;\n      routes.right = left;\n    }\n\n    return routes;\n  }\n  /**\n   * Returns an object describing the available fragment\n   * directions.\n   *\n   * @return {{prev: boolean, next: boolean}}\n   */\n\n\n  function availableFragments() {\n    if (currentSlide && config.fragments) {\n      var fragments = currentSlide.querySelectorAll('.fragment');\n      var hiddenFragments = currentSlide.querySelectorAll('.fragment:not(.visible)');\n      return {\n        prev: fragments.length - hiddenFragments.length > 0,\n        next: !!hiddenFragments.length\n      };\n    } else {\n      return {\n        prev: false,\n        next: false\n      };\n    }\n  }\n  /**\n   * Enforces origin-specific format rules for embedded media.\n   */\n\n\n  function formatEmbeddedContent() {\n    var _appendParamToIframeSource = function _appendParamToIframeSource(sourceAttribute, sourceURL, param) {\n      toArray(dom.slides.querySelectorAll('iframe[' + sourceAttribute + '*=\"' + sourceURL + '\"]')).forEach(function (el) {\n        var src = el.getAttribute(sourceAttribute);\n\n        if (src && src.indexOf(param) === -1) {\n          el.setAttribute(sourceAttribute, src + (!/\\?/.test(src) ? '?' : '&') + param);\n        }\n      });\n    }; // YouTube frames must include \"?enablejsapi=1\"\n\n\n    _appendParamToIframeSource('src', 'youtube.com/embed/', 'enablejsapi=1');\n\n    _appendParamToIframeSource('data-src', 'youtube.com/embed/', 'enablejsapi=1'); // Vimeo frames must include \"?api=1\"\n\n\n    _appendParamToIframeSource('src', 'player.vimeo.com/', 'api=1');\n\n    _appendParamToIframeSource('data-src', 'player.vimeo.com/', 'api=1');\n  }\n  /**\n   * Start playback of any embedded content inside of\n   * the given element.\n   *\n   * @param {HTMLElement} element\n   */\n\n\n  function startEmbeddedContent(element) {\n    if (element && !isSpeakerNotes()) {\n      // Restart GIFs\n      toArray(element.querySelectorAll('img[src$=\".gif\"]')).forEach(function (el) {\n        // Setting the same unchanged source like this was confirmed\n        // to work in Chrome, FF & Safari\n        el.setAttribute('src', el.getAttribute('src'));\n      }); // HTML5 media elements\n\n      toArray(element.querySelectorAll('video, audio')).forEach(function (el) {\n        if (closestParent(el, '.fragment') && !closestParent(el, '.fragment.visible')) {\n          return;\n        } // Prefer an explicit global autoplay setting\n\n\n        var autoplay = config.autoPlayMedia; // If no global setting is available, fall back on the element's\n        // own autoplay setting\n\n        if (typeof autoplay !== 'boolean') {\n          autoplay = el.hasAttribute('data-autoplay') || !!closestParent(el, '.slide-background');\n        }\n\n        if (autoplay && typeof el.play === 'function') {\n          // If the media is ready, start playback\n          if (el.readyState > 1) {\n            startEmbeddedMedia({\n              target: el\n            });\n          } // Mobile devices never fire a loaded event so instead\n          // of waiting, we initiate playback\n          else if (isMobileDevice) {\n            var promise = el.play(); // If autoplay does not work, ensure that the controls are visible so\n            // that the viewer can start the media on their own\n\n            if (promise && typeof promise.catch === 'function' && el.controls === false) {\n              promise.catch(function () {\n                el.controls = true; // Once the video does start playing, hide the controls again\n\n                el.addEventListener('play', function () {\n                  el.controls = false;\n                });\n              });\n            }\n          } // If the media isn't loaded, wait before playing\n          else {\n            el.removeEventListener('loadeddata', startEmbeddedMedia); // remove first to avoid dupes\n\n            el.addEventListener('loadeddata', startEmbeddedMedia);\n          }\n        }\n      }); // Normal iframes\n\n      toArray(element.querySelectorAll('iframe[src]')).forEach(function (el) {\n        if (closestParent(el, '.fragment') && !closestParent(el, '.fragment.visible')) {\n          return;\n        }\n\n        startEmbeddedIframe({\n          target: el\n        });\n      }); // Lazy loading iframes\n\n      toArray(element.querySelectorAll('iframe[data-src]')).forEach(function (el) {\n        if (closestParent(el, '.fragment') && !closestParent(el, '.fragment.visible')) {\n          return;\n        }\n\n        if (el.getAttribute('src') !== el.getAttribute('data-src')) {\n          el.removeEventListener('load', startEmbeddedIframe); // remove first to avoid dupes\n\n          el.addEventListener('load', startEmbeddedIframe);\n          el.setAttribute('src', el.getAttribute('data-src'));\n        }\n      });\n    }\n  }\n  /**\n   * Starts playing an embedded video/audio element after\n   * it has finished loading.\n   *\n   * @param {object} event\n   */\n\n\n  function startEmbeddedMedia(event) {\n    var isAttachedToDOM = !!closestParent(event.target, 'html'),\n        isVisible = !!closestParent(event.target, '.present');\n\n    if (isAttachedToDOM && isVisible) {\n      event.target.currentTime = 0;\n      event.target.play();\n    }\n\n    event.target.removeEventListener('loadeddata', startEmbeddedMedia);\n  }\n  /**\n   * \"Starts\" the content of an embedded iframe using the\n   * postMessage API.\n   *\n   * @param {object} event\n   */\n\n\n  function startEmbeddedIframe(event) {\n    var iframe = event.target;\n\n    if (iframe && iframe.contentWindow) {\n      var isAttachedToDOM = !!closestParent(event.target, 'html'),\n          isVisible = !!closestParent(event.target, '.present');\n\n      if (isAttachedToDOM && isVisible) {\n        // Prefer an explicit global autoplay setting\n        var autoplay = config.autoPlayMedia; // If no global setting is available, fall back on the element's\n        // own autoplay setting\n\n        if (typeof autoplay !== 'boolean') {\n          autoplay = iframe.hasAttribute('data-autoplay') || !!closestParent(iframe, '.slide-background');\n        } // YouTube postMessage API\n\n\n        if (/youtube\\.com\\/embed\\//.test(iframe.getAttribute('src')) && autoplay) {\n          iframe.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*');\n        } // Vimeo postMessage API\n        else if (/player\\.vimeo\\.com\\//.test(iframe.getAttribute('src')) && autoplay) {\n          iframe.contentWindow.postMessage('{\"method\":\"play\"}', '*');\n        } // Generic postMessage API\n        else {\n          iframe.contentWindow.postMessage('slide:start', '*');\n        }\n      }\n    }\n  }\n  /**\n   * Stop playback of any embedded content inside of\n   * the targeted slide.\n   *\n   * @param {HTMLElement} element\n   */\n\n\n  function stopEmbeddedContent(element, options) {\n    options = extend({\n      // Defaults\n      unloadIframes: true\n    }, options || {});\n\n    if (element && element.parentNode) {\n      // HTML5 media elements\n      toArray(element.querySelectorAll('video, audio')).forEach(function (el) {\n        if (!el.hasAttribute('data-ignore') && typeof el.pause === 'function') {\n          el.setAttribute('data-paused-by-reveal', '');\n          el.pause();\n        }\n      }); // Generic postMessage API for non-lazy loaded iframes\n\n      toArray(element.querySelectorAll('iframe')).forEach(function (el) {\n        if (el.contentWindow) el.contentWindow.postMessage('slide:stop', '*');\n        el.removeEventListener('load', startEmbeddedIframe);\n      }); // YouTube postMessage API\n\n      toArray(element.querySelectorAll('iframe[src*=\"youtube.com/embed/\"]')).forEach(function (el) {\n        if (!el.hasAttribute('data-ignore') && el.contentWindow && typeof el.contentWindow.postMessage === 'function') {\n          el.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n        }\n      }); // Vimeo postMessage API\n\n      toArray(element.querySelectorAll('iframe[src*=\"player.vimeo.com/\"]')).forEach(function (el) {\n        if (!el.hasAttribute('data-ignore') && el.contentWindow && typeof el.contentWindow.postMessage === 'function') {\n          el.contentWindow.postMessage('{\"method\":\"pause\"}', '*');\n        }\n      });\n\n      if (options.unloadIframes === true) {\n        // Unload lazy-loaded iframes\n        toArray(element.querySelectorAll('iframe[data-src]')).forEach(function (el) {\n          // Only removing the src doesn't actually unload the frame\n          // in all browsers (Firefox) so we set it to blank first\n          el.setAttribute('src', 'about:blank');\n          el.removeAttribute('src');\n        });\n      }\n    }\n  }\n  /**\n   * Returns the number of past slides. This can be used as a global\n   * flattened index for slides.\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n   *\n   * @return {number} Past slide count\n   */\n\n\n  function getSlidePastCount(slide) {\n    if (slide === undefined) {\n      slide = currentSlide;\n    }\n\n    var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)); // The number of past slides\n\n    var pastCount = 0; // Step through all slides and count the past ones\n\n    mainLoop: for (var i = 0; i < horizontalSlides.length; i++) {\n      var horizontalSlide = horizontalSlides[i];\n      var verticalSlides = toArray(horizontalSlide.querySelectorAll('section'));\n\n      for (var j = 0; j < verticalSlides.length; j++) {\n        // Stop as soon as we arrive at the present\n        if (verticalSlides[j] === slide) {\n          break mainLoop;\n        }\n\n        pastCount++;\n      } // Stop as soon as we arrive at the present\n\n\n      if (horizontalSlide === slide) {\n        break;\n      } // Don't count the wrapping section for vertical slides\n\n\n      if (horizontalSlide.classList.contains('stack') === false) {\n        pastCount++;\n      }\n    }\n\n    return pastCount;\n  }\n  /**\n   * Returns a value ranging from 0-1 that represents\n   * how far into the presentation we have navigated.\n   *\n   * @return {number}\n   */\n\n\n  function getProgress() {\n    // The number of past and total slides\n    var totalCount = getTotalSlides();\n    var pastCount = getSlidePastCount();\n\n    if (currentSlide) {\n      var allFragments = currentSlide.querySelectorAll('.fragment'); // If there are fragments in the current slide those should be\n      // accounted for in the progress.\n\n      if (allFragments.length > 0) {\n        var visibleFragments = currentSlide.querySelectorAll('.fragment.visible'); // This value represents how big a portion of the slide progress\n        // that is made up by its fragments (0-1)\n\n        var fragmentWeight = 0.9; // Add fragment progress to the past slide count\n\n        pastCount += visibleFragments.length / allFragments.length * fragmentWeight;\n      }\n    }\n\n    return Math.min(pastCount / (totalCount - 1), 1);\n  }\n  /**\n   * Checks if this presentation is running inside of the\n   * speaker notes window.\n   *\n   * @return {boolean}\n   */\n\n\n  function isSpeakerNotes() {\n    return !!window.location.search.match(/receiver/gi);\n  }\n  /**\n   * Reads the current URL (hash) and navigates accordingly.\n   */\n\n\n  function readURL() {\n    var hash = window.location.hash; // Attempt to parse the hash as either an index or name\n\n    var bits = hash.slice(2).split('/'),\n        name = hash.replace(/#|\\//gi, ''); // If the first bit is not fully numeric and there is a name we\n    // can assume that this is a named link\n\n    if (!/^[0-9]*$/.test(bits[0]) && name.length) {\n      var element; // Ensure the named link is a valid HTML ID attribute\n\n      try {\n        element = document.getElementById(decodeURIComponent(name));\n      } catch (error) {} // Ensure that we're not already on a slide with the same name\n\n\n      var isSameNameAsCurrentSlide = currentSlide ? currentSlide.getAttribute('id') === name : false;\n\n      if (element) {\n        // If the slide exists and is not the current slide...\n        if (!isSameNameAsCurrentSlide) {\n          // ...find the position of the named slide and navigate to it\n          var indices = Reveal.getIndices(element);\n          slide(indices.h, indices.v);\n        }\n      } // If the slide doesn't exist, navigate to the current slide\n      else {\n        slide(indexh || 0, indexv || 0);\n      }\n    } else {\n      var hashIndexBase = config.hashOneBasedIndex ? 1 : 0; // Read the index components of the hash\n\n      var h = parseInt(bits[0], 10) - hashIndexBase || 0,\n          v = parseInt(bits[1], 10) - hashIndexBase || 0,\n          f;\n\n      if (config.fragmentInURL) {\n        f = parseInt(bits[2], 10);\n\n        if (isNaN(f)) {\n          f = undefined;\n        }\n      }\n\n      if (h !== indexh || v !== indexv || f !== undefined) {\n        slide(h, v, f);\n      }\n    }\n  }\n  /**\n   * Updates the page URL (hash) to reflect the current\n   * state.\n   *\n   * @param {number} delay The time in ms to wait before\n   * writing the hash\n   */\n\n\n  function writeURL(delay) {\n    // Make sure there's never more than one timeout running\n    clearTimeout(writeURLTimeout); // If a delay is specified, timeout this call\n\n    if (typeof delay === 'number') {\n      writeURLTimeout = setTimeout(writeURL, delay);\n    } else if (currentSlide) {\n      // If we're configured to push to history OR the history\n      // API is not avaialble.\n      if (config.history || !window.history) {\n        window.location.hash = locationHash();\n      } // If we're configured to reflect the current slide in the\n      // URL without pushing to history.\n      else if (config.hash) {\n        window.history.replaceState(null, null, '#' + locationHash());\n      } // If history and hash are both disabled, a hash may still\n      // be added to the URL by clicking on a href with a hash\n      // target. Counter this by always removing the hash.\n      else {\n        window.history.replaceState(null, null, window.location.pathname + window.location.search);\n      }\n    }\n  }\n  /**\n   * Retrieves the h/v location and fragment of the current,\n   * or specified, slide.\n   *\n   * @param {HTMLElement} [slide] If specified, the returned\n   * index will be for this slide rather than the currently\n   * active one\n   *\n   * @return {{h: number, v: number, f: number}}\n   */\n\n\n  function getIndices(slide) {\n    // By default, return the current indices\n    var h = indexh,\n        v = indexv,\n        f; // If a slide is specified, return the indices of that slide\n\n    if (slide) {\n      var isVertical = isVerticalSlide(slide);\n      var slideh = isVertical ? slide.parentNode : slide; // Select all horizontal slides\n\n      var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)); // Now that we know which the horizontal slide is, get its index\n\n      h = Math.max(horizontalSlides.indexOf(slideh), 0); // Assume we're not vertical\n\n      v = undefined; // If this is a vertical slide, grab the vertical index\n\n      if (isVertical) {\n        v = Math.max(toArray(slide.parentNode.querySelectorAll('section')).indexOf(slide), 0);\n      }\n    }\n\n    if (!slide && currentSlide) {\n      var hasFragments = currentSlide.querySelectorAll('.fragment').length > 0;\n\n      if (hasFragments) {\n        var currentFragment = currentSlide.querySelector('.current-fragment');\n\n        if (currentFragment && currentFragment.hasAttribute('data-fragment-index')) {\n          f = parseInt(currentFragment.getAttribute('data-fragment-index'), 10);\n        } else {\n          f = currentSlide.querySelectorAll('.fragment.visible').length - 1;\n        }\n      }\n    }\n\n    return {\n      h: h,\n      v: v,\n      f: f\n    };\n  }\n  /**\n   * Retrieves all slides in this presentation.\n   */\n\n\n  function getSlides() {\n    return toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR + ':not(.stack)'));\n  }\n  /**\n   * Returns a list of all horizontal slides in the deck. Each\n   * vertical stack is included as one horizontal slide in the\n   * resulting array.\n   */\n\n\n  function getHorizontalSlides() {\n    return toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n  }\n  /**\n   * Returns all vertical slides that exist within this deck.\n   */\n\n\n  function getVerticalSlides() {\n    return toArray(dom.wrapper.querySelectorAll('.slides>section>section'));\n  }\n  /**\n   * Returns true if there are at least two horizontal slides.\n   */\n\n\n  function hasHorizontalSlides() {\n    return getHorizontalSlides().length > 1;\n  }\n  /**\n   * Returns true if there are at least two vertical slides.\n   */\n\n\n  function hasVerticalSlides() {\n    return getVerticalSlides().length > 1;\n  }\n  /**\n   * Returns an array of objects where each object represents the\n   * attributes on its respective slide.\n   */\n\n\n  function getSlidesAttributes() {\n    return getSlides().map(function (slide) {\n      var attributes = {};\n\n      for (var i = 0; i < slide.attributes.length; i++) {\n        var attribute = slide.attributes[i];\n        attributes[attribute.name] = attribute.value;\n      }\n\n      return attributes;\n    });\n  }\n  /**\n   * Retrieves the total number of slides in this presentation.\n   *\n   * @return {number}\n   */\n\n\n  function getTotalSlides() {\n    return getSlides().length;\n  }\n  /**\n   * Returns the slide element matching the specified index.\n   *\n   * @return {HTMLElement}\n   */\n\n\n  function getSlide(x, y) {\n    var horizontalSlide = dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)[x];\n    var verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll('section');\n\n    if (verticalSlides && verticalSlides.length && typeof y === 'number') {\n      return verticalSlides ? verticalSlides[y] : undefined;\n    }\n\n    return horizontalSlide;\n  }\n  /**\n   * Returns the background element for the given slide.\n   * All slides, even the ones with no background properties\n   * defined, have a background element so as long as the\n   * index is valid an element will be returned.\n   *\n   * @param {mixed} x Horizontal background index OR a slide\n   * HTML element\n   * @param {number} y Vertical background index\n   * @return {(HTMLElement[]|*)}\n   */\n\n\n  function getSlideBackground(x, y) {\n    var slide = typeof x === 'number' ? getSlide(x, y) : x;\n\n    if (slide) {\n      return slide.slideBackgroundElement;\n    }\n\n    return undefined;\n  }\n  /**\n   * Retrieves the speaker notes from a slide. Notes can be\n   * defined in two ways:\n   * 1. As a data-notes attribute on the slide <section>\n   * 2. As an <aside class=\"notes\"> inside of the slide\n   *\n   * @param {HTMLElement} [slide=currentSlide]\n   * @return {(string|null)}\n   */\n\n\n  function getSlideNotes(slide) {\n    // Default to the current slide\n    slide = slide || currentSlide; // Notes can be specified via the data-notes attribute...\n\n    if (slide.hasAttribute('data-notes')) {\n      return slide.getAttribute('data-notes');\n    } // ... or using an <aside class=\"notes\"> element\n\n\n    var notesElement = slide.querySelector('aside.notes');\n\n    if (notesElement) {\n      return notesElement.innerHTML;\n    }\n\n    return null;\n  }\n  /**\n   * Retrieves the current state of the presentation as\n   * an object. This state can then be restored at any\n   * time.\n   *\n   * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n   */\n\n\n  function getState() {\n    var indices = getIndices();\n    return {\n      indexh: indices.h,\n      indexv: indices.v,\n      indexf: indices.f,\n      paused: isPaused(),\n      overview: isOverview()\n    };\n  }\n  /**\n   * Restores the presentation to the given state.\n   *\n   * @param {object} state As generated by getState()\n   * @see {@link getState} generates the parameter `state`\n   */\n\n\n  function setState(state) {\n    if (typeof state === 'object') {\n      slide(deserialize(state.indexh), deserialize(state.indexv), deserialize(state.indexf));\n      var pausedFlag = deserialize(state.paused),\n          overviewFlag = deserialize(state.overview);\n\n      if (typeof pausedFlag === 'boolean' && pausedFlag !== isPaused()) {\n        togglePause(pausedFlag);\n      }\n\n      if (typeof overviewFlag === 'boolean' && overviewFlag !== isOverview()) {\n        toggleOverview(overviewFlag);\n      }\n    }\n  }\n  /**\n   * Return a sorted fragments list, ordered by an increasing\n   * \"data-fragment-index\" attribute.\n   *\n   * Fragments will be revealed in the order that they are returned by\n   * this function, so you can use the index attributes to control the\n   * order of fragment appearance.\n   *\n   * To maintain a sensible default fragment order, fragments are presumed\n   * to be passed in document order. This function adds a \"fragment-index\"\n   * attribute to each node if such an attribute is not already present,\n   * and sets that attribute to an integer value which is the position of\n   * the fragment within the fragments list.\n   *\n   * @param {object[]|*} fragments\n   * @param {boolean} grouped If true the returned array will contain\n   * nested arrays for all fragments with the same index\n   * @return {object[]} sorted Sorted array of fragments\n   */\n\n\n  function sortFragments(fragments, grouped) {\n    fragments = toArray(fragments);\n    var ordered = [],\n        unordered = [],\n        sorted = []; // Group ordered and unordered elements\n\n    fragments.forEach(function (fragment, i) {\n      if (fragment.hasAttribute('data-fragment-index')) {\n        var index = parseInt(fragment.getAttribute('data-fragment-index'), 10);\n\n        if (!ordered[index]) {\n          ordered[index] = [];\n        }\n\n        ordered[index].push(fragment);\n      } else {\n        unordered.push([fragment]);\n      }\n    }); // Append fragments without explicit indices in their\n    // DOM order\n\n    ordered = ordered.concat(unordered); // Manually count the index up per group to ensure there\n    // are no gaps\n\n    var index = 0; // Push all fragments in their sorted order to an array,\n    // this flattens the groups\n\n    ordered.forEach(function (group) {\n      group.forEach(function (fragment) {\n        sorted.push(fragment);\n        fragment.setAttribute('data-fragment-index', index);\n      });\n      index++;\n    });\n    return grouped === true ? ordered : sorted;\n  }\n  /**\n   * Refreshes the fragments on the current slide so that they\n   * have the appropriate classes (.visible + .current-fragment).\n   *\n   * @param {number} [index] The index of the current fragment\n   * @param {array} [fragments] Array containing all fragments\n   * in the current slide\n   *\n   * @return {{shown: array, hidden: array}}\n   */\n\n\n  function updateFragments(index, fragments) {\n    var changedFragments = {\n      shown: [],\n      hidden: []\n    };\n\n    if (currentSlide && config.fragments) {\n      fragments = fragments || sortFragments(currentSlide.querySelectorAll('.fragment'));\n\n      if (fragments.length) {\n        var maxIndex = 0;\n\n        if (typeof index !== 'number') {\n          var currentFragment = sortFragments(currentSlide.querySelectorAll('.fragment.visible')).pop();\n\n          if (currentFragment) {\n            index = parseInt(currentFragment.getAttribute('data-fragment-index') || 0, 10);\n          }\n        }\n\n        toArray(fragments).forEach(function (el, i) {\n          if (el.hasAttribute('data-fragment-index')) {\n            i = parseInt(el.getAttribute('data-fragment-index'), 10);\n          }\n\n          maxIndex = Math.max(maxIndex, i); // Visible fragments\n\n          if (i <= index) {\n            if (!el.classList.contains('visible')) changedFragments.shown.push(el);\n            el.classList.add('visible');\n            el.classList.remove('current-fragment'); // Announce the fragments one by one to the Screen Reader\n\n            dom.statusDiv.textContent = getStatusText(el);\n\n            if (i === index) {\n              el.classList.add('current-fragment');\n              startEmbeddedContent(el);\n            }\n          } // Hidden fragments\n          else {\n            if (el.classList.contains('visible')) changedFragments.hidden.push(el);\n            el.classList.remove('visible');\n            el.classList.remove('current-fragment');\n          }\n        }); // Write the current fragment index to the slide <section>.\n        // This can be used by end users to apply styles based on\n        // the current fragment index.\n\n        index = typeof index === 'number' ? index : -1;\n        index = Math.max(Math.min(index, maxIndex), -1);\n        currentSlide.setAttribute('data-fragment', index);\n      }\n    }\n\n    return changedFragments;\n  }\n  /**\n   * Navigate to the specified slide fragment.\n   *\n   * @param {?number} index The index of the fragment that\n   * should be shown, -1 means all are invisible\n   * @param {number} offset Integer offset to apply to the\n   * fragment index\n   *\n   * @return {boolean} true if a change was made in any\n   * fragments visibility as part of this call\n   */\n\n\n  function navigateFragment(index, offset) {\n    if (currentSlide && config.fragments) {\n      var fragments = sortFragments(currentSlide.querySelectorAll('.fragment'));\n\n      if (fragments.length) {\n        // If no index is specified, find the current\n        if (typeof index !== 'number') {\n          var lastVisibleFragment = sortFragments(currentSlide.querySelectorAll('.fragment.visible')).pop();\n\n          if (lastVisibleFragment) {\n            index = parseInt(lastVisibleFragment.getAttribute('data-fragment-index') || 0, 10);\n          } else {\n            index = -1;\n          }\n        } // If an offset is specified, apply it to the index\n\n\n        if (typeof offset === 'number') {\n          index += offset;\n        }\n\n        var changedFragments = updateFragments(index, fragments);\n\n        if (changedFragments.hidden.length) {\n          dispatchEvent('fragmenthidden', {\n            fragment: changedFragments.hidden[0],\n            fragments: changedFragments.hidden\n          });\n        }\n\n        if (changedFragments.shown.length) {\n          dispatchEvent('fragmentshown', {\n            fragment: changedFragments.shown[0],\n            fragments: changedFragments.shown\n          });\n        }\n\n        updateControls();\n        updateProgress();\n\n        if (config.fragmentInURL) {\n          writeURL();\n        }\n\n        return !!(changedFragments.shown.length || changedFragments.hidden.length);\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Navigate to the next slide fragment.\n   *\n   * @return {boolean} true if there was a next fragment,\n   * false otherwise\n   */\n\n\n  function nextFragment() {\n    return navigateFragment(null, 1);\n  }\n  /**\n   * Navigate to the previous slide fragment.\n   *\n   * @return {boolean} true if there was a previous fragment,\n   * false otherwise\n   */\n\n\n  function previousFragment() {\n    return navigateFragment(null, -1);\n  }\n  /**\n   * Cues a new automated slide if enabled in the config.\n   */\n\n\n  function cueAutoSlide() {\n    cancelAutoSlide();\n\n    if (currentSlide && config.autoSlide !== false) {\n      var fragment = currentSlide.querySelector('.current-fragment'); // When the slide first appears there is no \"current\" fragment so\n      // we look for a data-autoslide timing on the first fragment\n\n      if (!fragment) fragment = currentSlide.querySelector('.fragment');\n      var fragmentAutoSlide = fragment ? fragment.getAttribute('data-autoslide') : null;\n      var parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute('data-autoslide') : null;\n      var slideAutoSlide = currentSlide.getAttribute('data-autoslide'); // Pick value in the following priority order:\n      // 1. Current fragment's data-autoslide\n      // 2. Current slide's data-autoslide\n      // 3. Parent slide's data-autoslide\n      // 4. Global autoSlide setting\n\n      if (fragmentAutoSlide) {\n        autoSlide = parseInt(fragmentAutoSlide, 10);\n      } else if (slideAutoSlide) {\n        autoSlide = parseInt(slideAutoSlide, 10);\n      } else if (parentAutoSlide) {\n        autoSlide = parseInt(parentAutoSlide, 10);\n      } else {\n        autoSlide = config.autoSlide;\n      } // If there are media elements with data-autoplay,\n      // automatically set the autoSlide duration to the\n      // length of that media. Not applicable if the slide\n      // is divided up into fragments.\n      // playbackRate is accounted for in the duration.\n\n\n      if (currentSlide.querySelectorAll('.fragment').length === 0) {\n        toArray(currentSlide.querySelectorAll('video, audio')).forEach(function (el) {\n          if (el.hasAttribute('data-autoplay')) {\n            if (autoSlide && el.duration * 1000 / el.playbackRate > autoSlide) {\n              autoSlide = el.duration * 1000 / el.playbackRate + 1000;\n            }\n          }\n        });\n      } // Cue the next auto-slide if:\n      // - There is an autoSlide value\n      // - Auto-sliding isn't paused by the user\n      // - The presentation isn't paused\n      // - The overview isn't active\n      // - The presentation isn't over\n\n\n      if (autoSlide && !autoSlidePaused && !isPaused() && !isOverview() && (!Reveal.isLastSlide() || availableFragments().next || config.loop === true)) {\n        autoSlideTimeout = setTimeout(function () {\n          typeof config.autoSlideMethod === 'function' ? config.autoSlideMethod() : navigateNext();\n          cueAutoSlide();\n        }, autoSlide);\n        autoSlideStartTime = Date.now();\n      }\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(autoSlideTimeout !== -1);\n      }\n    }\n  }\n  /**\n   * Cancels any ongoing request to auto-slide.\n   */\n\n\n  function cancelAutoSlide() {\n    clearTimeout(autoSlideTimeout);\n    autoSlideTimeout = -1;\n  }\n\n  function pauseAutoSlide() {\n    if (autoSlide && !autoSlidePaused) {\n      autoSlidePaused = true;\n      dispatchEvent('autoslidepaused');\n      clearTimeout(autoSlideTimeout);\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(false);\n      }\n    }\n  }\n\n  function resumeAutoSlide() {\n    if (autoSlide && autoSlidePaused) {\n      autoSlidePaused = false;\n      dispatchEvent('autoslideresumed');\n      cueAutoSlide();\n    }\n  }\n\n  function navigateLeft() {\n    // Reverse for RTL\n    if (config.rtl) {\n      if ((isOverview() || nextFragment() === false) && availableRoutes().left) {\n        slide(indexh + 1, config.navigationMode === 'grid' ? indexv : undefined);\n      }\n    } // Normal navigation\n    else if ((isOverview() || previousFragment() === false) && availableRoutes().left) {\n      slide(indexh - 1, config.navigationMode === 'grid' ? indexv : undefined);\n    }\n  }\n\n  function navigateRight() {\n    hasNavigatedRight = true; // Reverse for RTL\n\n    if (config.rtl) {\n      if ((isOverview() || previousFragment() === false) && availableRoutes().right) {\n        slide(indexh - 1, config.navigationMode === 'grid' ? indexv : undefined);\n      }\n    } // Normal navigation\n    else if ((isOverview() || nextFragment() === false) && availableRoutes().right) {\n      slide(indexh + 1, config.navigationMode === 'grid' ? indexv : undefined);\n    }\n  }\n\n  function navigateUp() {\n    // Prioritize hiding fragments\n    if ((isOverview() || previousFragment() === false) && availableRoutes().up) {\n      slide(indexh, indexv - 1);\n    }\n  }\n\n  function navigateDown() {\n    hasNavigatedDown = true; // Prioritize revealing fragments\n\n    if ((isOverview() || nextFragment() === false) && availableRoutes().down) {\n      slide(indexh, indexv + 1);\n    }\n  }\n  /**\n   * Navigates backwards, prioritized in the following order:\n   * 1) Previous fragment\n   * 2) Previous vertical slide\n   * 3) Previous horizontal slide\n   */\n\n\n  function navigatePrev() {\n    // Prioritize revealing fragments\n    if (previousFragment() === false) {\n      if (availableRoutes().up) {\n        navigateUp();\n      } else {\n        // Fetch the previous horizontal slide, if there is one\n        var previousSlide;\n\n        if (config.rtl) {\n          previousSlide = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR + '.future')).pop();\n        } else {\n          previousSlide = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR + '.past')).pop();\n        }\n\n        if (previousSlide) {\n          var v = previousSlide.querySelectorAll('section').length - 1 || undefined;\n          var h = indexh - 1;\n          slide(h, v);\n        }\n      }\n    }\n  }\n  /**\n   * The reverse of #navigatePrev().\n   */\n\n\n  function navigateNext() {\n    hasNavigatedRight = true;\n    hasNavigatedDown = true; // Prioritize revealing fragments\n\n    if (nextFragment() === false) {\n      var routes = availableRoutes(); // When looping is enabled `routes.down` is always available\n      // so we need a separate check for when we've reached the\n      // end of a stack and should move horizontally\n\n      if (routes.down && routes.right && config.loop && Reveal.isLastVerticalSlide(currentSlide)) {\n        routes.down = false;\n      }\n\n      if (routes.down) {\n        navigateDown();\n      } else if (config.rtl) {\n        navigateLeft();\n      } else {\n        navigateRight();\n      }\n    }\n  }\n  /**\n   * Checks if the target element prevents the triggering of\n   * swipe navigation.\n   */\n\n\n  function isSwipePrevented(target) {\n    while (target && typeof target.hasAttribute === 'function') {\n      if (target.hasAttribute('data-prevent-swipe')) return true;\n      target = target.parentNode;\n    }\n\n    return false;\n  } // --------------------------------------------------------------------//\n  // ----------------------------- EVENTS -------------------------------//\n  // --------------------------------------------------------------------//\n\n  /**\n   * Called by all event handlers that are based on user\n   * input.\n   *\n   * @param {object} [event]\n   */\n\n\n  function onUserInput(event) {\n    if (config.autoSlideStoppable) {\n      pauseAutoSlide();\n    }\n  }\n  /**\n   * Called whenever there is mouse input at the document level\n   * to determine if the cursor is active or not.\n   *\n   * @param {object} event\n   */\n\n\n  function onDocumentCursorActive(event) {\n    showCursor();\n    clearTimeout(cursorInactiveTimeout);\n    cursorInactiveTimeout = setTimeout(hideCursor, config.hideCursorTime);\n  }\n  /**\n   * Handler for the document level 'keypress' event.\n   *\n   * @param {object} event\n   */\n\n\n  function onDocumentKeyPress(event) {\n    // Check if the pressed key is question mark\n    if (event.shiftKey && event.charCode === 63) {\n      toggleHelp();\n    }\n  }\n  /**\n   * Handler for the document level 'keydown' event.\n   *\n   * @param {object} event\n   */\n\n\n  function onDocumentKeyDown(event) {\n    // If there's a condition specified and it returns false,\n    // ignore this event\n    if (typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false) {\n      return true;\n    } // Shorthand\n\n\n    var keyCode = event.keyCode; // Remember if auto-sliding was paused so we can toggle it\n\n    var autoSlideWasPaused = autoSlidePaused;\n    onUserInput(event); // Is there a focused element that could be using the keyboard?\n\n    var activeElementIsCE = document.activeElement && document.activeElement.contentEditable !== 'inherit';\n    var activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test(document.activeElement.tagName);\n    var activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test(document.activeElement.className); // Whitelist specific modified + keycode combinations\n\n    var prevSlideShortcut = event.shiftKey && event.keyCode === 32;\n    var firstSlideShortcut = event.shiftKey && keyCode === 37;\n    var lastSlideShortcut = event.shiftKey && keyCode === 39; // Prevent all other events when a modifier is pressed\n\n    var unusedModifier = !prevSlideShortcut && !firstSlideShortcut && !lastSlideShortcut && (event.shiftKey || event.altKey || event.ctrlKey || event.metaKey); // Disregard the event if there's a focused element or a\n    // keyboard modifier key is present\n\n    if (activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier) return; // While paused only allow resume keyboard events; 'b', 'v', '.'\n\n    var resumeKeyCodes = [66, 86, 190, 191];\n    var key; // Custom key bindings for togglePause should be able to resume\n\n    if (typeof config.keyboard === 'object') {\n      for (key in config.keyboard) {\n        if (config.keyboard[key] === 'togglePause') {\n          resumeKeyCodes.push(parseInt(key, 10));\n        }\n      }\n    }\n\n    if (isPaused() && resumeKeyCodes.indexOf(keyCode) === -1) {\n      return false;\n    } // Use linear navigation if we're configured to OR if\n    // the presentation is one-dimensional\n\n\n    var useLinearMode = config.navigationMode === 'linear' || !hasHorizontalSlides() || !hasVerticalSlides();\n    var triggered = false; // 1. User defined key bindings\n\n    if (typeof config.keyboard === 'object') {\n      for (key in config.keyboard) {\n        // Check if this binding matches the pressed key\n        if (parseInt(key, 10) === keyCode) {\n          var value = config.keyboard[key]; // Callback function\n\n          if (typeof value === 'function') {\n            value.apply(null, [event]);\n          } // String shortcuts to reveal.js API\n          else if (typeof value === 'string' && typeof Reveal[value] === 'function') {\n            Reveal[value].call();\n          }\n\n          triggered = true;\n        }\n      }\n    } // 2. Registered custom key bindings\n\n\n    if (triggered === false) {\n      for (key in registeredKeyBindings) {\n        // Check if this binding matches the pressed key\n        if (parseInt(key, 10) === keyCode) {\n          var action = registeredKeyBindings[key].callback; // Callback function\n\n          if (typeof action === 'function') {\n            action.apply(null, [event]);\n          } // String shortcuts to reveal.js API\n          else if (typeof action === 'string' && typeof Reveal[action] === 'function') {\n            Reveal[action].call();\n          }\n\n          triggered = true;\n        }\n      }\n    } // 3. System defined key bindings\n\n\n    if (triggered === false) {\n      // Assume true and try to prove false\n      triggered = true; // P, PAGE UP\n\n      if (keyCode === 80 || keyCode === 33) {\n        navigatePrev();\n      } // N, PAGE DOWN\n      else if (keyCode === 78 || keyCode === 34) {\n        navigateNext();\n      } // H, LEFT\n      else if (keyCode === 72 || keyCode === 37) {\n        if (firstSlideShortcut) {\n          slide(0);\n        } else if (!isOverview() && useLinearMode) {\n          navigatePrev();\n        } else {\n          navigateLeft();\n        }\n      } // L, RIGHT\n      else if (keyCode === 76 || keyCode === 39) {\n        if (lastSlideShortcut) {\n          slide(Number.MAX_VALUE);\n        } else if (!isOverview() && useLinearMode) {\n          navigateNext();\n        } else {\n          navigateRight();\n        }\n      } // K, UP\n      else if (keyCode === 75 || keyCode === 38) {\n        if (!isOverview() && useLinearMode) {\n          navigatePrev();\n        } else {\n          navigateUp();\n        }\n      } // J, DOWN\n      else if (keyCode === 74 || keyCode === 40) {\n        if (!isOverview() && useLinearMode) {\n          navigateNext();\n        } else {\n          navigateDown();\n        }\n      } // HOME\n      else if (keyCode === 36) {\n        slide(0);\n      } // END\n      else if (keyCode === 35) {\n        slide(Number.MAX_VALUE);\n      } // SPACE\n      else if (keyCode === 32) {\n        if (isOverview()) {\n          deactivateOverview();\n        }\n\n        if (event.shiftKey) {\n          navigatePrev();\n        } else {\n          navigateNext();\n        }\n      } // TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n      else if (keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191) {\n        togglePause();\n      } // F\n      else if (keyCode === 70) {\n        enterFullscreen();\n      } // A\n      else if (keyCode === 65) {\n        if (config.autoSlideStoppable) {\n          toggleAutoSlide(autoSlideWasPaused);\n        }\n      } else {\n        triggered = false;\n      }\n    } // If the input resulted in a triggered action we should prevent\n    // the browsers default behavior\n\n\n    if (triggered) {\n      event.preventDefault && event.preventDefault();\n    } // ESC or O key\n    else if ((keyCode === 27 || keyCode === 79) && features.transforms3d) {\n      if (dom.overlay) {\n        closeOverlay();\n      } else {\n        toggleOverview();\n      }\n\n      event.preventDefault && event.preventDefault();\n    } // If auto-sliding is enabled we need to cue up\n    // another timeout\n\n\n    cueAutoSlide();\n  }\n  /**\n   * Handler for the 'touchstart' event, enables support for\n   * swipe and pinch gestures.\n   *\n   * @param {object} event\n   */\n\n\n  function onTouchStart(event) {\n    if (isSwipePrevented(event.target)) return true;\n    touch.startX = event.touches[0].clientX;\n    touch.startY = event.touches[0].clientY;\n    touch.startCount = event.touches.length;\n  }\n  /**\n   * Handler for the 'touchmove' event.\n   *\n   * @param {object} event\n   */\n\n\n  function onTouchMove(event) {\n    if (isSwipePrevented(event.target)) return true; // Each touch should only trigger one action\n\n    if (!touch.captured) {\n      onUserInput(event);\n      var currentX = event.touches[0].clientX;\n      var currentY = event.touches[0].clientY; // There was only one touch point, look for a swipe\n\n      if (event.touches.length === 1 && touch.startCount !== 2) {\n        var deltaX = currentX - touch.startX,\n            deltaY = currentY - touch.startY;\n\n        if (deltaX > touch.threshold && Math.abs(deltaX) > Math.abs(deltaY)) {\n          touch.captured = true;\n\n          if (config.navigationMode === 'linear') {\n            if (config.rtl) {\n              navigateNext();\n            } else {\n              navigatePrev();\n            }\n          } else {\n            navigateLeft();\n          }\n        } else if (deltaX < -touch.threshold && Math.abs(deltaX) > Math.abs(deltaY)) {\n          touch.captured = true;\n\n          if (config.navigationMode === 'linear') {\n            if (config.rtl) {\n              navigatePrev();\n            } else {\n              navigateNext();\n            }\n          } else {\n            navigateRight();\n          }\n        } else if (deltaY > touch.threshold) {\n          touch.captured = true;\n\n          if (config.navigationMode === 'linear') {\n            navigatePrev();\n          } else {\n            navigateUp();\n          }\n        } else if (deltaY < -touch.threshold) {\n          touch.captured = true;\n\n          if (config.navigationMode === 'linear') {\n            navigateNext();\n          } else {\n            navigateDown();\n          }\n        } // If we're embedded, only block touch events if they have\n        // triggered an action\n\n\n        if (config.embedded) {\n          if (touch.captured || isVerticalSlide(currentSlide)) {\n            event.preventDefault();\n          }\n        } // Not embedded? Block them all to avoid needless tossing\n        // around of the viewport in iOS\n        else {\n          event.preventDefault();\n        }\n      }\n    } // There's a bug with swiping on some Android devices unless\n    // the default action is always prevented\n    else if (UA.match(/android/gi)) {\n      event.preventDefault();\n    }\n  }\n  /**\n   * Handler for the 'touchend' event.\n   *\n   * @param {object} event\n   */\n\n\n  function onTouchEnd(event) {\n    touch.captured = false;\n  }\n  /**\n   * Convert pointer down to touch start.\n   *\n   * @param {object} event\n   */\n\n\n  function onPointerDown(event) {\n    if (event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\") {\n      event.touches = [{\n        clientX: event.clientX,\n        clientY: event.clientY\n      }];\n      onTouchStart(event);\n    }\n  }\n  /**\n   * Convert pointer move to touch move.\n   *\n   * @param {object} event\n   */\n\n\n  function onPointerMove(event) {\n    if (event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\") {\n      event.touches = [{\n        clientX: event.clientX,\n        clientY: event.clientY\n      }];\n      onTouchMove(event);\n    }\n  }\n  /**\n   * Convert pointer up to touch end.\n   *\n   * @param {object} event\n   */\n\n\n  function onPointerUp(event) {\n    if (event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\") {\n      event.touches = [{\n        clientX: event.clientX,\n        clientY: event.clientY\n      }];\n      onTouchEnd(event);\n    }\n  }\n  /**\n   * Handles mouse wheel scrolling, throttled to avoid skipping\n   * multiple slides.\n   *\n   * @param {object} event\n   */\n\n\n  function onDocumentMouseScroll(event) {\n    if (Date.now() - lastMouseWheelStep > 600) {\n      lastMouseWheelStep = Date.now();\n      var delta = event.detail || -event.wheelDelta;\n\n      if (delta > 0) {\n        navigateNext();\n      } else if (delta < 0) {\n        navigatePrev();\n      }\n    }\n  }\n  /**\n   * Clicking on the progress bar results in a navigation to the\n   * closest approximate horizontal slide using this equation:\n   *\n   * ( clickX / presentationWidth ) * numberOfSlides\n   *\n   * @param {object} event\n   */\n\n\n  function onProgressClicked(event) {\n    onUserInput(event);\n    event.preventDefault();\n    var slidesTotal = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)).length;\n    var slideIndex = Math.floor(event.clientX / dom.wrapper.offsetWidth * slidesTotal);\n\n    if (config.rtl) {\n      slideIndex = slidesTotal - slideIndex;\n    }\n\n    slide(slideIndex);\n  }\n  /**\n   * Event handler for navigation control buttons.\n   */\n\n\n  function onNavigateLeftClicked(event) {\n    event.preventDefault();\n    onUserInput();\n    config.navigationMode === 'linear' ? navigatePrev() : navigateLeft();\n  }\n\n  function onNavigateRightClicked(event) {\n    event.preventDefault();\n    onUserInput();\n    config.navigationMode === 'linear' ? navigateNext() : navigateRight();\n  }\n\n  function onNavigateUpClicked(event) {\n    event.preventDefault();\n    onUserInput();\n    navigateUp();\n  }\n\n  function onNavigateDownClicked(event) {\n    event.preventDefault();\n    onUserInput();\n    navigateDown();\n  }\n\n  function onNavigatePrevClicked(event) {\n    event.preventDefault();\n    onUserInput();\n    navigatePrev();\n  }\n\n  function onNavigateNextClicked(event) {\n    event.preventDefault();\n    onUserInput();\n    navigateNext();\n  }\n  /**\n   * Handler for the window level 'hashchange' event.\n   *\n   * @param {object} [event]\n   */\n\n\n  function onWindowHashChange(event) {\n    readURL();\n  }\n  /**\n   * Handler for the window level 'resize' event.\n   *\n   * @param {object} [event]\n   */\n\n\n  function onWindowResize(event) {\n    layout();\n  }\n  /**\n   * Handle for the window level 'visibilitychange' event.\n   *\n   * @param {object} [event]\n   */\n\n\n  function onPageVisibilityChange(event) {\n    var isHidden = document.webkitHidden || document.msHidden || document.hidden; // If, after clicking a link or similar and we're coming back,\n    // focus the document.body to ensure we can use keyboard shortcuts\n\n    if (isHidden === false && document.activeElement !== document.body) {\n      // Not all elements support .blur() - SVGs among them.\n      if (typeof document.activeElement.blur === 'function') {\n        document.activeElement.blur();\n      }\n\n      document.body.focus();\n    }\n  }\n  /**\n   * Invoked when a slide is and we're in the overview.\n   *\n   * @param {object} event\n   */\n\n\n  function onOverviewSlideClicked(event) {\n    // TODO There's a bug here where the event listeners are not\n    // removed after deactivating the overview.\n    if (eventsAreBound && isOverview()) {\n      event.preventDefault();\n      var element = event.target;\n\n      while (element && !element.nodeName.match(/section/gi)) {\n        element = element.parentNode;\n      }\n\n      if (element && !element.classList.contains('disabled')) {\n        deactivateOverview();\n\n        if (element.nodeName.match(/section/gi)) {\n          var h = parseInt(element.getAttribute('data-index-h'), 10),\n              v = parseInt(element.getAttribute('data-index-v'), 10);\n          slide(h, v);\n        }\n      }\n    }\n  }\n  /**\n   * Handles clicks on links that are set to preview in the\n   * iframe overlay.\n   *\n   * @param {object} event\n   */\n\n\n  function onPreviewLinkClicked(event) {\n    if (event.currentTarget && event.currentTarget.hasAttribute('href')) {\n      var url = event.currentTarget.getAttribute('href');\n\n      if (url) {\n        showPreview(url);\n        event.preventDefault();\n      }\n    }\n  }\n  /**\n   * Handles click on the auto-sliding controls element.\n   *\n   * @param {object} [event]\n   */\n\n\n  function onAutoSlidePlayerClick(event) {\n    // Replay\n    if (Reveal.isLastSlide() && config.loop === false) {\n      slide(0, 0);\n      resumeAutoSlide();\n    } // Resume\n    else if (autoSlidePaused) {\n      resumeAutoSlide();\n    } // Pause\n    else {\n      pauseAutoSlide();\n    }\n  } // --------------------------------------------------------------------//\n  // ------------------------ PLAYBACK COMPONENT ------------------------//\n  // --------------------------------------------------------------------//\n\n  /**\n   * Constructor for the playback component, which displays\n   * play/pause/progress controls.\n   *\n   * @param {HTMLElement} container The component will append\n   * itself to this\n   * @param {function} progressCheck A method which will be\n   * called frequently to get the current progress on a range\n   * of 0-1\n   */\n\n\n  function Playback(container, progressCheck) {\n    // Cosmetics\n    this.diameter = 100;\n    this.diameter2 = this.diameter / 2;\n    this.thickness = 6; // Flags if we are currently playing\n\n    this.playing = false; // Current progress on a 0-1 range\n\n    this.progress = 0; // Used to loop the animation smoothly\n\n    this.progressOffset = 1;\n    this.container = container;\n    this.progressCheck = progressCheck;\n    this.canvas = document.createElement('canvas');\n    this.canvas.className = 'playback';\n    this.canvas.width = this.diameter;\n    this.canvas.height = this.diameter;\n    this.canvas.style.width = this.diameter2 + 'px';\n    this.canvas.style.height = this.diameter2 + 'px';\n    this.context = this.canvas.getContext('2d');\n    this.container.appendChild(this.canvas);\n    this.render();\n  }\n  /**\n   * @param value\n   */\n\n\n  Playback.prototype.setPlaying = function (value) {\n    var wasPlaying = this.playing;\n    this.playing = value; // Start repainting if we weren't already\n\n    if (!wasPlaying && this.playing) {\n      this.animate();\n    } else {\n      this.render();\n    }\n  };\n\n  Playback.prototype.animate = function () {\n    var progressBefore = this.progress;\n    this.progress = this.progressCheck(); // When we loop, offset the progress so that it eases\n    // smoothly rather than immediately resetting\n\n    if (progressBefore > 0.8 && this.progress < 0.2) {\n      this.progressOffset = this.progress;\n    }\n\n    this.render();\n\n    if (this.playing) {\n      features.requestAnimationFrameMethod.call(window, this.animate.bind(this));\n    }\n  };\n  /**\n   * Renders the current progress and playback state.\n   */\n\n\n  Playback.prototype.render = function () {\n    var progress = this.playing ? this.progress : 0,\n        radius = this.diameter2 - this.thickness,\n        x = this.diameter2,\n        y = this.diameter2,\n        iconSize = 28; // Ease towards 1\n\n    this.progressOffset += (1 - this.progressOffset) * 0.1;\n    var endAngle = -Math.PI / 2 + progress * (Math.PI * 2);\n    var startAngle = -Math.PI / 2 + this.progressOffset * (Math.PI * 2);\n    this.context.save();\n    this.context.clearRect(0, 0, this.diameter, this.diameter); // Solid background color\n\n    this.context.beginPath();\n    this.context.arc(x, y, radius + 4, 0, Math.PI * 2, false);\n    this.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n    this.context.fill(); // Draw progress track\n\n    this.context.beginPath();\n    this.context.arc(x, y, radius, 0, Math.PI * 2, false);\n    this.context.lineWidth = this.thickness;\n    this.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n    this.context.stroke();\n\n    if (this.playing) {\n      // Draw progress on top of track\n      this.context.beginPath();\n      this.context.arc(x, y, radius, startAngle, endAngle, false);\n      this.context.lineWidth = this.thickness;\n      this.context.strokeStyle = '#fff';\n      this.context.stroke();\n    }\n\n    this.context.translate(x - iconSize / 2, y - iconSize / 2); // Draw play/pause icons\n\n    if (this.playing) {\n      this.context.fillStyle = '#fff';\n      this.context.fillRect(0, 0, iconSize / 2 - 4, iconSize);\n      this.context.fillRect(iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize);\n    } else {\n      this.context.beginPath();\n      this.context.translate(4, 0);\n      this.context.moveTo(0, 0);\n      this.context.lineTo(iconSize - 4, iconSize / 2);\n      this.context.lineTo(0, iconSize);\n      this.context.fillStyle = '#fff';\n      this.context.fill();\n    }\n\n    this.context.restore();\n  };\n\n  Playback.prototype.on = function (type, listener) {\n    this.canvas.addEventListener(type, listener, false);\n  };\n\n  Playback.prototype.off = function (type, listener) {\n    this.canvas.removeEventListener(type, listener, false);\n  };\n\n  Playback.prototype.destroy = function () {\n    this.playing = false;\n\n    if (this.canvas.parentNode) {\n      this.container.removeChild(this.canvas);\n    }\n  }; // --------------------------------------------------------------------//\n  // ------------------------------- API --------------------------------//\n  // --------------------------------------------------------------------//\n\n\n  Reveal = {\n    VERSION: VERSION,\n    initialize: initialize,\n    configure: configure,\n    sync: sync,\n    syncSlide: syncSlide,\n    syncFragments: syncFragments,\n    // Navigation methods\n    slide: slide,\n    left: navigateLeft,\n    right: navigateRight,\n    up: navigateUp,\n    down: navigateDown,\n    prev: navigatePrev,\n    next: navigateNext,\n    // Fragment methods\n    navigateFragment: navigateFragment,\n    prevFragment: previousFragment,\n    nextFragment: nextFragment,\n    // Deprecated aliases\n    navigateTo: slide,\n    navigateLeft: navigateLeft,\n    navigateRight: navigateRight,\n    navigateUp: navigateUp,\n    navigateDown: navigateDown,\n    navigatePrev: navigatePrev,\n    navigateNext: navigateNext,\n    // Forces an update in slide layout\n    layout: layout,\n    // Randomizes the order of slides\n    shuffle: shuffle,\n    // Returns an object with the available routes as booleans (left/right/top/bottom)\n    availableRoutes: availableRoutes,\n    // Returns an object with the available fragments as booleans (prev/next)\n    availableFragments: availableFragments,\n    // Toggles a help overlay with keyboard shortcuts\n    toggleHelp: toggleHelp,\n    // Toggles the overview mode on/off\n    toggleOverview: toggleOverview,\n    // Toggles the \"black screen\" mode on/off\n    togglePause: togglePause,\n    // Toggles the auto slide mode on/off\n    toggleAutoSlide: toggleAutoSlide,\n    // State checks\n    isOverview: isOverview,\n    isPaused: isPaused,\n    isAutoSliding: isAutoSliding,\n    isSpeakerNotes: isSpeakerNotes,\n    // Slide preloading\n    loadSlide: loadSlide,\n    unloadSlide: unloadSlide,\n    // Adds or removes all internal event listeners (such as keyboard)\n    addEventListeners: addEventListeners,\n    removeEventListeners: removeEventListeners,\n    // Facility for persisting and restoring the presentation state\n    getState: getState,\n    setState: setState,\n    // Presentation progress\n    getSlidePastCount: getSlidePastCount,\n    // Presentation progress on range of 0-1\n    getProgress: getProgress,\n    // Returns the indices of the current, or specified, slide\n    getIndices: getIndices,\n    // Returns an Array of all slides\n    getSlides: getSlides,\n    // Returns an Array of objects representing the attributes on\n    // the slides\n    getSlidesAttributes: getSlidesAttributes,\n    // Returns the total number of slides\n    getTotalSlides: getTotalSlides,\n    // Returns the slide element at the specified index\n    getSlide: getSlide,\n    // Returns the slide background element at the specified index\n    getSlideBackground: getSlideBackground,\n    // Returns the speaker notes string for a slide, or null\n    getSlideNotes: getSlideNotes,\n    // Returns an array with all horizontal/vertical slides in the deck\n    getHorizontalSlides: getHorizontalSlides,\n    getVerticalSlides: getVerticalSlides,\n    // Checks if the presentation contains two or more\n    // horizontal/vertical slides\n    hasHorizontalSlides: hasHorizontalSlides,\n    hasVerticalSlides: hasVerticalSlides,\n    // Returns the previous slide element, may be null\n    getPreviousSlide: function getPreviousSlide() {\n      return previousSlide;\n    },\n    // Returns the current slide element\n    getCurrentSlide: function getCurrentSlide() {\n      return currentSlide;\n    },\n    // Returns the current scale of the presentation content\n    getScale: function getScale() {\n      return scale;\n    },\n    // Returns the current configuration object\n    getConfig: function getConfig() {\n      return config;\n    },\n    // Helper method, retrieves query string as a key/value hash\n    getQueryHash: function getQueryHash() {\n      var query = {};\n      location.search.replace(/[A-Z0-9]+?=([\\w\\.%-]*)/gi, function (a) {\n        query[a.split('=').shift()] = a.split('=').pop();\n      }); // Basic deserialization\n\n      for (var i in query) {\n        var value = query[i];\n        query[i] = deserialize(unescape(value));\n      }\n\n      return query;\n    },\n    // Returns the top-level DOM element\n    getRevealElement: function getRevealElement() {\n      return dom.wrapper || document.querySelector('.reveal');\n    },\n    // Returns a hash with all registered plugins\n    getPlugins: function getPlugins() {\n      return plugins;\n    },\n    // Returns true if we're currently on the first slide\n    isFirstSlide: function isFirstSlide() {\n      return indexh === 0 && indexv === 0;\n    },\n    // Returns true if we're currently on the last slide\n    isLastSlide: function isLastSlide() {\n      if (currentSlide) {\n        // Does this slide have a next sibling?\n        if (currentSlide.nextElementSibling) return false; // If it's vertical, does its parent have a next sibling?\n\n        if (isVerticalSlide(currentSlide) && currentSlide.parentNode.nextElementSibling) return false;\n        return true;\n      }\n\n      return false;\n    },\n    // Returns true if we're on the last slide in the current\n    // vertical stack\n    isLastVerticalSlide: function isLastVerticalSlide() {\n      if (currentSlide && isVerticalSlide(currentSlide)) {\n        // Does this slide have a next sibling?\n        if (currentSlide.nextElementSibling) return false;\n        return true;\n      }\n\n      return false;\n    },\n    // Checks if reveal.js has been loaded and is ready for use\n    isReady: function isReady() {\n      return loaded;\n    },\n    // Forward event binding to the reveal DOM element\n    addEventListener: function addEventListener(type, listener, useCapture) {\n      if ('addEventListener' in window) {\n        Reveal.getRevealElement().addEventListener(type, listener, useCapture);\n      }\n    },\n    removeEventListener: function removeEventListener(type, listener, useCapture) {\n      if ('addEventListener' in window) {\n        Reveal.getRevealElement().removeEventListener(type, listener, useCapture);\n      }\n    },\n    // Adds/removes a custom key binding\n    addKeyBinding: addKeyBinding,\n    removeKeyBinding: removeKeyBinding,\n    // API for registering and retrieving plugins\n    registerPlugin: registerPlugin,\n    hasPlugin: hasPlugin,\n    getPlugin: getPlugin,\n    // Programmatically triggers a keyboard event\n    triggerKey: function triggerKey(keyCode) {\n      onDocumentKeyDown({\n        keyCode: keyCode\n      });\n    },\n    // Registers a new shortcut to include in the help overlay\n    registerKeyboardShortcut: function registerKeyboardShortcut(key, value) {\n      keyboardShortcuts[key] = value;\n    }\n  };\n  return Reveal;\n});"],"sourceRoot":""}