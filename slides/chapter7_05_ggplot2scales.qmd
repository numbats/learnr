---
title: Scales in `ggplot2`
format: 
  revealjs:
    logo: images/monash-stacked-blue-rgb-transparent.png
    slide-number: true
    show-slide-number: all
    controls: true
    width: 1280
    height: 720
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(fig.path = "images/chapter7-04/",
                      fig.align = "center",
                      fig.width = 4, 
                      fig.height = 4,
                      echo = TRUE)
library(ggplot2)
library(patchwork)
```

## Scales

* Scales control the mapping from **data** to aesthetics
* They usually come in the format like below:

<center>
![](images/ggplot-scale.png)
</center>

```{r scale-demo}
ggplot(diamonds, aes(carat, price)) +
  geom_point() + 
  scale_y_log10()
```

---

## Guide

* The scale creates a **guide**: an **axis** or **legend**

<center>
![](images/guides-dissection.png)
</center>

* So to modify these you generally use `scale_*` or other handy functions (e.g. `guides`, `labs`, `xlab`, `ylab`, and so on).

---

## Example plot

```{r example, fig.width = 6, fig.height = 4}
g <- ggplot(diamonds, aes(carat, price)) + geom_hex()
g
```

---

## Modifying axis

```{r modify-axis, fig.width = 6, fig.height = 4}
g + 
  scale_y_continuous(name = "Price", 
                     breaks = c(0, 10000),
                     labels = c("0", "More\n than\n 10K")) + 
  geom_hline(yintercept = 10000, color = "red", size = 2)
```

---

## Modifying labels


```{r modify-labels, fig.width = 6, fig.height = 4}
g + 
  scale_y_continuous(
    label = scales::dollar_format()
  )
```

---

## Modifying legend scale

```{r modify-legend}
g + 
  scale_fill_continuous(
    breaks = c(0, 10, 100, 1000, 4000),
    trans = "log10"
  )
```

---

## Removing legend

```{r remove-legend}
g + 
  scale_fill_continuous(
    guide = "none"
  )
```

---

## Alternative control of guides

* There are generally other ways of modifying the scales
* Each user has a different mental mode, so you can use what suits you (and others in your team)

```{r change-labels}
g + 
  ylab("Price") + # Changes the y axis label
  labs(x = "Carat", # Changes the x axis label
       fill = "Count") # Changes the legend name
```
```{r remove-legend-alt}
g + guides(fill = "none") # remove the legend
```

---

## Color

* When using color in your plots, it's good to keep in mind that color can be viewed differently by people 

```{r, echo = FALSE, warning = FALSE, fig.width = 10, fig.height = 5}
cols <- c("dodgerblue3", "grey93", "darkorange4", "green3", "red3")
g1 <- ggplot(diamonds, aes(carat, fill = cut)) +
  geom_density(alpha = 0.5) + 
  scale_x_log10() + 
  scale_fill_manual(values = cols) +
  ggtitle("Original")

g2 <- g1 + scale_fill_manual(values = colorspace::protan(cols)) +
  ggtitle("Protan")
g3 <- g1 + scale_fill_manual(values = colorspace::deutan(cols)) +
  ggtitle("Deutan")
g4 <- g1 + scale_fill_manual(values = colorspace::tritan(cols)) +
  ggtitle("Tritan")

(g1 + g2) / (g3 + g4)
```

