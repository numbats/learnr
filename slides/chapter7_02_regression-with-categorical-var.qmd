---
title: Linear regression with categorical variables
#execute:
#  keep-md: true
format: 
  #teachr::teachr_slides:
  revealjs:
    #self-contained: true
    logo: images/monash-stacked-blue-rgb-transparent.png
    slide-number: true
    show-slide-number: all
    controls: true
    width: 1280
    height: 720
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(#fig.path = "images/chapter8-02/",
                      fig.align = "center",
                      fig.width = 10, 
                      fig.height = 4,
                      cache.path = "cache/",
                      cache = FALSE,
                      echo = TRUE)
library(tidyverse)
library(broom)
library(grid)
library(patchwork)
```



## Tooth growth data

* We'll now use the `ToothGrowth` data to illustrate a model with a categorical variable:

```{r}
str(ToothGrowth)
```


  

Notes:

* `ToothGrowth` contains observations on 60 guinea pigs with variables:
  * `len`: the tooth length
  * `supp`: supplement type (VC = vitamin C, OJ = orange juice)
  * `dose`: dose of supplement in milligrams/days

```{r toothgrowth-plot, echo = FALSE, fig.width = 5}
ggplot(ToothGrowth, aes(supp, len, color = factor(dose))) + 
  ggbeeswarm::geom_quasirandom() +
  labs(x = "Supplement", y = "Tooth length", color = "Dose (mg/day)") +
  scale_color_viridis_d(option = "C")
```



---

## Fitting a categorical variable in `lm`: illustration

* `supp` is a factor with two levels: "VC" and "OJ"
* What model are we fitting below?

```{r}
fit1s <- lm(len ~ 1 + as.numeric(supp=="VC") + as.numeric(supp=="OJ") , 
            data = ToothGrowth)
```

$$\color{#006dae}{y_{ij}} = \beta_0\cdot \color{#006dae}{1} + \beta_1 \color{#006dae}{x_{1i}}+ \beta_2 \color{#006dae}{x_{2i}} + e_{ij}, \qquad \text{for }i = 1, 2, j = 1, 2, 3$$
Notes:

where

* $i$ corresponds to the level of the supplementary variable,
* $j$ corresponds to the dose level,
* $x_{1i} = \begin{cases}1\quad\text{if }i=1\\0\quad\text{if }i=2\end{cases},$
* $x_{2i} = \begin{cases}1\quad\text{if }i=2\\0\quad\text{if }i=1\end{cases},$ and 
* in this case the system is singular so the last term is dropped (same as $\beta_2 = 0$). 

---

## Fitting a categorical variable in `lm`: convenient approach

* Instead of creating dummy variables, like $x_{1i}$ and $x_{2i}$, for every level of a categorical variable, it is more convenient to use the categorical variable directly in the symbolic formula like below:

```{r}
fit2s <- lm(len ~ supp, data = ToothGrowth)
```

* Above model is the equivalent as `fit1s`:

```{r}
coef(fit1s)
coef(fit2s)
```

Notes:

* By default `lm` uses the treatment constraint (`?contr.treatment`), i.e. first level of the categorical is omitted (same as constraining the corresponding coefficient to zero).  

---

## Predicted values

$$\widehat{\texttt{len}} = 20.66 - 3.7 \cdot \texttt{supp}_{\texttt{VC}}$$


* There are only two possible response values from this model:

```{r}
predict(fit2s, data.frame(supp = c("OJ", "VC")))
```


```{r toothgrowth-plot2, echo = FALSE, fig.width = 5}
pred <- data.frame(supp = c("OJ", "VC"),
                   len = predict(fit2s, data.frame(supp = c("OJ", "VC"))))
ggplot(ToothGrowth, aes(supp, len, color = factor(dose))) + 
  ggbeeswarm::geom_quasirandom() +
  labs(x = "Supplement", y = "Tooth length", color = "Dose (mg/day)") +
  scale_color_viridis_d(option = "C") +
  geom_point(data = pred, color = "indianred", size = 3, shape = 10) +
  geom_segment(data = data.frame(x = c(-Inf, -Inf),
                                 xend = c(1, 2),
                                 y = c(pred$len[1], pred$len[2]),
                                 yend = c(pred$len[1], pred$len[2])),
               aes(x = x, xend = xend, y = y, yend = yend),
               color = "indianred", linetype = "dashed")
```

* Is this a reasonable model?

