---
title: Multiple linear regression
#execute:
#  keep-md: true
format: 
  #teachr::teachr_slides:
  revealjs:
    #self-contained: true
    logo: images/monash-stacked-blue-rgb-transparent.png
    slide-number: true
    show-slide-number: all
    controls: true
    width: 1280
    height: 720
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(fig.align = "center",
                      fig.width = 10, 
                      fig.height = 4,
                      cache.path = "cache/",
                      cache = FALSE,
                      echo = TRUE)
library(tidyverse)
theme_set(theme(text = element_text(size = 24)))
```








## Illustrative data: marketing 

```{r}
data(marketing, package = "datarium")
str(marketing)
```


Notes: 

* The data contains the impact of three advertising medias on sales.
* The variables in the data are:
  * `youtube`: the amount of advertising budget spent on youtube advertising (in $1000),
  * `facebook`: the amount of advertising budget spent on facebook advertising (in $1000),
  * `newspaper`: the amount of advertising budget spent on newspaper advertising (in $1000), and 
  * `sales`: the amount of sales in ($1000).
* Each observation corresponds to one particular trial period. 
* There are 200 trial periods in total.

---

## Pair plots

```{r ggpairs, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 6}
GGally::ggpairs(marketing)
```

---


## Plot of correlation matrix

```{r ggcorr, message = FALSE, warning = FALSE}
GGally::ggcorr(marketing)
```

Notes: 

```{r}
cor(marketing)
```

---

## Multiple linear regression

A natural extension of simple linear regression is to consider models with more than one predictor:


$$y_i = \beta_0 + \beta_1 x_{i1} + ... +  \beta_kx_{ik} + e_i$$
for $i = 1, ..., n$, where we assume <span style="color:red">$e_i$ are i.i.d. $NID(0, \sigma^2)$</span>.  

Notes:


* i.i.d. =  independent and identically distributed 

---

## Multiple linear regression with R

To fit 

$$\texttt{sales}_i = \beta_0 + \beta_1 \texttt{youtube}_i + \beta_2 \texttt{facebook}_i + \beta_3 \texttt{newspaper}_i + e_i$$

```{r}
fit <- lm(sales ~ youtube + facebook + newspaper, data = marketing)
coef(fit)
```


<aside class="notes">

* So the fitted model is approximately,

$$\widehat{\texttt{sales}} = 3.53 + 0.0458 \times \texttt{youtube} + 0.189 \times \texttt{facebook} - 0.001 \times \texttt{newspaper}.$$

</aside>
---

## Residual plot


```{r res-plot, echo = FALSE, fig.width = 12, fig.height = 8}
library(tidyverse)
library(patchwork)

g1 <- marketing %>% 
  mutate(.resid = residuals(fit),
         .fitted = fitted(fit)) %>% 
  ggplot(aes(youtube, .resid)) + 
  geom_point() +
  geom_hline(yintercept = 0)
g2 <- g1 + aes(x = facebook)
g3 <- g1 + aes(x = newspaper)
g4 <- g1 + aes(x = .fitted)

(g1 + g2) / (g3 + g4) + plot_annotation(tag_levels = "A")
``` 


Notes:

* The code to produce these plots is:

```{r res-plot, eval = FALSE}
```


* A residual plot usually refers to the scatterplot of residuals against an independent variable. 
* A residual plot may sometimes refer to the scatterplot of residuals against the fitted values. 
* The residual may be substituted with standardised or studentized residuals.
* Recall you assume that $e_i$ is i.i.d. $N(0, \sigma^2)$ -- under this assumption, **there should be no visible pattern in the residual plot**.
* If there are visible trends in the residual plot, this suggests that there are some other variable not accounted for in modelling the response. 
* Here, we see a "ribbon" shape for plots A and B -- this suggests that any inferences drawn from the fitted model may not be appropriate.

---

## Summary 

* You can extend a simple linear regression by adding more covariates in the model in the symbolic formula of `lm`.
* Remember to do some model diagnostics, e.g. using the residual plots.
* A pattern in the residual suggests that the model may be inappropriate to use for inferences.
