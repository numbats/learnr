---
title: Visualising regression models
#execute:
#  keep-md: true
format: 
  #teachr::teachr_slides:
  revealjs:
    #self-contained: true
    logo: images/monash-stacked-blue-rgb-transparent.png
    slide-number: true
    show-slide-number: all
    controls: true
    width: 1280
    height: 720
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(fig.align = "center",
                      fig.width = 10, 
                      fig.height = 4,
                      cache.path = "cache/",
                      cache = FALSE,
                      echo = TRUE)
library(tidyverse)
theme_set(theme(text = element_text(size = 18)))
```


## Plotting models via `geom_smooth()`

* You can easily plot the fitted model for a bivariate data using `geom_smooth()` from `ggplot2`. 

```{r geom-smooth}
ggplot(cars, aes(dist, speed)) + 
  geom_point() +
  geom_smooth(method = lm, se = FALSE, formula = y ~ x)
```

Notes:

* The `library(tidyverse)` is already loaded here!

---

## Modifying formula in `geom_smooth()`

* You can modify formula on the left hand side based on `x`

```{r smooth-lm}
ggplot(cars, aes(dist, speed)) + 
  geom_point() +
  geom_smooth(method = lm, se = FALSE, formula = y ~ poly(x, 3))
```

---

## Caution with `geom_smooth()`

* But it's not the same for the right hand side!

```{r smooth-lm2}
ggplot(cars, aes(dist, speed)) + 
  geom_point() +
  geom_smooth(method = lm, se = FALSE, formula = log10(y) ~ poly(x, 3))
```


Notes:

* This is because `ggplot2` relies on `predict()` for the response (`log(y)`) but doesn't know what the inverse function to recover `y` is. 

---



## Combining scales with `geom_smooth()`

* Below is actually showing `lm(log10(speed) ~ dist, data = cars)`:

```{r smooth-lm3, fig.height = 2.5}
ggplot(cars, aes(dist, speed)) + 
  geom_point() +
  geom_smooth(method = lm, se = FALSE, formula = y ~ x) +
  scale_y_log10()
```


---



## Back-transforming with `geom_smooth()`

* We add the inverse transformation for `y` below to get back the original scale before the `log10` transformation:

```{r smooth-lm4, eval = FALSE}
ggplot(cars, aes(dist, speed)) + 
  geom_point() +
  geom_smooth(method = lm, se = FALSE, formula = y ~ x) +
  scale_y_log10(breaks = seq(5, 35, 5)) +
  coord_trans(y = scales::exp_trans(10))
```

Notes:

```{r smooth-lm4, echo = FALSE}
```


---

## Summary

* You can easily visualise regression models using `geom_smooth` for bivariate data.
* If the scale for `x` and/or `y` have been transformed, be aware that the fitted model is not the same as the `formula` in `geom_smooth`. 
